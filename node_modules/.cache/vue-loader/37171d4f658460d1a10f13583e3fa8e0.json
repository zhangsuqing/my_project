{"remainingRequest":"E:\\workspace\\code\\test\\my_project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\workspace\\code\\test\\my_project\\src\\views\\auth\\user\\edit_user.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\workspace\\code\\test\\my_project\\src\\views\\auth\\user\\edit_user.vue","mtime":1563023636938},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { isMobile, isEmail } from \"@/utils/validate\";\r\nimport {\r\n  addUser,\r\n  updUser,\r\n  getUserInfo\r\n  // uploadPicture\r\n} from \"@/api/auth/user\";\r\n// import { insertUserRole } from \"@/api/auth/roleUser\";\r\nimport { fetchRoleList } from \"@/api/auth/role\";\r\nimport head_Png from \"@/assets/default_head_title.png\";\r\n\r\nexport default {\r\n  props: [\"dialogStatus\", \"dialogFormVisible\"],\r\n  data() {\r\n    const idValidatePhone = (rule, value, callback) => {\r\n      if (!isMobile(value)) {\r\n        callback(new Error(\"请输入正确的手机号码\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    const idValidateEmail = (rule, value, callback) => {\r\n      if (!isEmail(value)) {\r\n        callback(new Error(\"请输入正确的邮箱号码\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n       head_Png,\r\n      myVisible: this.dialogFormVisible,\r\n      disabledInput: false,\r\n      imageUrl: '',\r\n      roleListDataList: [],\r\n      roleListDataByid: [],\r\n      checkListData: [],\r\n      statusMap: {\r\n        create: \"新增\",\r\n        update: \"编辑\"\r\n      },\r\n      dataForm: {\r\n        id: 0,\r\n        userId:0,\r\n        username: \"\",\r\n        password: \"\",\r\n        avatar: \"\",\r\n        mobile: \"\",\r\n        email: \"\",\r\n        status: 1,\r\n        account: \"\",\r\n        roleList: []\r\n      },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: \"用户名不能为空\" },\r\n          { max: 30, message: \"最多输入 30 个字符\", trigger: \"blur\" }\r\n        ],\r\n        password: [\r\n          { required: true, message: \"密码不能为空\" },\r\n          { max: 50, message: \"最多输入 50 个字符\", trigger: \"blur\" }\r\n        ],\r\n        realName: [{ max: 30, message: \"最多输入 30 个字符\", trigger: \"blur\" }],\r\n        phone: [\r\n          { required: true, trigger: \"blur\", validator: idValidatePhone },\r\n          { max: 20, message: \"最多输入 20 个字符\", trigger: \"blur\" }\r\n        ],\r\n        email: [\r\n          { required: true, trigger: \"blur\", validator: idValidateEmail },\r\n          { max: 50, message: \"最多输入 50 个字符\", trigger: \"blur\" }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  watch: {\r\n    dialogFormVisible(val) {\r\n      // 监听父元件中传来的dialogFormVisible属性是否变化，变化则赋值给副本myVisible\r\n      this.myVisible = val;\r\n    },\r\n    myVisible(val) {\r\n      // 修改父元件的值\r\n      this.$emit(\"update:dialogFormVisible\", val);\r\n    }\r\n  },\r\n  created() {\r\n    //  this.selectList()\r\n  },\r\n  methods: {\r\n    selectList(id) {\r\n      this.dataForm.id = id;\r\n      this.dataForm.userId = id;\r\n      this.roleListDataList = [];\r\n      fetchRoleList()\r\n        .then(response => {\r\n          for (let i = 0; i < response.data.data.length; i++) {\r\n            this.roleListDataList.push({\r\n              key: response.data.data[i].roleId,\r\n              label: response.data.data[i].roleName\r\n            });\r\n          }\r\n        })\r\n        .then(() => {\r\n          this.myVisible = true;\r\n          this.$nextTick(() => {\r\n            this.handleCreate = [];\r\n            this.$refs[\"dataForm\"].resetFields();\r\n          });\r\n        })\r\n        .then(() => {\r\n          if (!this.dataForm.id) {\r\n            this.disabledInput = false;\r\n            this.roleListDataByid = [];\r\n            this.resetDataForm();\r\n            this.imageUrl = this.head_Png\r\n          } else {\r\n            this.disabledInput = true;\r\n            // 修改\r\n            getUserInfo(this.dataForm.id).then(response => {\r\n              if (response.data && response.data.code === \"200\") {\r\n                var data = response.data.data;\r\n                this.dataForm.username = data.user.username;\r\n                // this.dataForm.avatar = data.avatar;\r\n                this.dataForm.mobile = data.user.mobile;\r\n                this.dataForm.email = data.user.email;\r\n                this.dataForm.status = data.user.status;\r\n                // this.dataForm.account = data.account;\r\n                this.roleListDataByid = data.roleList;\r\n                this.checkListData = this.roleListDataByid;\r\n                // if(data.avatar!=null && data.avatar!=\"\"){\r\n                //   this.imageUrl = \"data:image/jpg;base64,\" + data.avatar;\r\n                // }else{\r\n                  this.imageUrl = this.head_Png\r\n                // }\r\n                this.dataForm.password = \"\";\r\n              }\r\n            });\r\n          }\r\n        });\r\n    },\r\n    roleChanges(row) {\r\n      this.checkListData = this.roleListDataByid;\r\n    },\r\n    resetDataForm() {\r\n      this.dataForm = {\r\n        id: 0,\r\n        username: \"\",\r\n        password: \"\",\r\n        realName: \"\",\r\n        avatar: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        sex: \"\",\r\n        status: 1,\r\n        account: \"\",\r\n        roleIdList: []\r\n      };\r\n    },\r\n    dataFormSubmit() {\r\n      this.$refs[\"dataForm\"].validate(valid => {\r\n        if (valid) {\r\n          if (!this.dataForm.id) {\r\n            this.dataForm.roleIdList = this.checkListData;\r\n            this.$confirm(\"确定进行[新增]操作?\", \"提示\", {\r\n              type: \"warning\"\r\n            }).then(response => {\r\n             this.$loading.open();\r\n              addUser(this.dataForm).then(response => {\r\n                if (response.data.state == \"true\") {\r\n                  let callback = () => {\r\n                    this.myVisible = false;\r\n                    this.$emit(\"refreshDataList\");\r\n                  };\r\n                  this.$msg.showSuccess(\"新增成功\", callback);\r\n                } else {\r\n                  this.$msg.showError(1, response.data.msg);\r\n                  this.$loading.close();\r\n                }\r\n              });\r\n            });\r\n          } else {\r\n            this.dataForm.roleIdList = this.checkListData;\r\n            this.$confirm(\"确定进行[编辑]操作?\", \"提示\", {\r\n              type: \"warning\"\r\n            }).then(response => {\r\n              this.$loading.open();\r\n              updUser(this.dataForm).then(response => {\r\n                this.myVisible = false;\r\n                this.$nextTick(function() {\r\n                  if (response.data.state == \"true\") {\r\n                    let callback = () => {\r\n                      this.myVisible = false;\r\n                      this.$emit(\"refreshDataList\");\r\n                      if (\r\n                        this.$store.getters.username == this.dataForm.username\r\n                      ) {\r\n                        this.$store.commit(\"SET_AVATAR\", this.dataForm.avatar);\r\n                        this.$store.commit('set_user', data.data);\r\n                      }\r\n                    };\r\n                    this.$msg.showSuccess(\"编辑成功\", callback);\r\n                    this.$loading.close();\r\n                  } else {\r\n                    this.$msg.showError(1, response.data.msg);\r\n                    this.$loading.close();\r\n                  }\r\n                });\r\n              });\r\n            });\r\n          }\r\n        } else {\r\n        }\r\n      });\r\n    },\r\n    handleCancel() {\r\n      // 点击叉叉\r\n      var self = this;\r\n      self.myVisible = false;\r\n    },\r\n    handleAvatarSuccess(res, file) {\r\n      this.imageUrl = URL.createObjectURL(file.raw);\r\n    },\r\n    beforeAvatarUpload(file) {\r\n      const isJPG = file.type === \"image/jpeg\";\r\n      const isPNG = file.type === \"image/png\";\r\n      const isLt2M = file.size / 1024 / 1024 < 1;\r\n\r\n      if (!isJPG && !isPNG) {\r\n        this.$msg.showError(1, \"上传头像图片 只能是JPG 格式 或者 png格式!\");\r\n        return;\r\n      }\r\n      if (!isLt2M) {\r\n        this.$msg.showError(1, \"上传头像图片大小不能超过 1MB!\");\r\n        return;\r\n      }\r\n      this.uploadFile(file);\r\n      return isJPG && isLt2M;\r\n    },\r\n    uploadFile(file) {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      // uploadPicture(formData).then(response => {\r\n      //   if (response.data.state === \"true\") {\r\n      //     this.imageUrl = \"data:image/jpg;base64,\" + response.data.msg;\r\n      //     this.dataForm.avatar = response.data.msg;\r\n      //     this.$msg.showSuccess(\"上传成功\");\r\n      //   } else {\r\n      //     this.$msg.showError(1, response.data.msg);\r\n      //   }\r\n      // });\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["edit_user.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"edit_user.vue","sourceRoot":"src/views/auth/user","sourcesContent":["<template>\r\n  <el-dialog width=\"60%\" :title=\"!dataForm.id ? '用户新增' : '用户编辑'\" :visible=\"myVisible\" :before-close=\"handleCancel\" :close-on-click-modal=false>\r\n    <el-form :rules=\"rules\" ref=\"dataForm\" :model=\"dataForm\" label-position=\"right\" label-width=\"100px\" style='margin:20px;'>\r\n      <el-row>\r\n        <el-col :span=\"16\">\r\n          <el-tabs type=\"border-card\" style=\"height:380px\">\r\n            <el-tab-pane label=\"用户基本信息\">\r\n              <el-form-item label=\"账号\" prop=\"username\">\r\n                <el-input placeholder=\"请填写账号\" v-bind:disabled=\"disabledInput\" v-model.trim=\"dataForm.username\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"密码\" prop=\"password\" v-if=\"!dataForm.id\">\r\n                <el-input type=\"password\" placeholder=\"请填写密码\" v-model.trim=\"dataForm.password\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"密码\" v-else>\r\n                <el-input type=\"password\" placeholder=\"请输入修改后的密码\" v-model.trim=\"dataForm.password\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"账户状态\">\r\n                <el-radio-group v-model=\"dataForm.status\">\r\n                  <el-radio class=\"radio\" :label=\"1\">正常</el-radio>\r\n                  <el-radio class=\"radio\" :label=\"2\">锁定</el-radio>\r\n                  <!-- <el-radio class=\"radio\" :label=\"3\">删除</el-radio>\r\n                  <el-radio class=\"radio\" :label=\"4\">非法</el-radio> -->\r\n                </el-radio-group>\r\n              </el-form-item>\r\n              <el-form-item label=\"手机号码\" prop=\"mobile\">\r\n                <el-input placeholder=\"请填写手机号码\" v-model=\"dataForm.mobile\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"邮箱\" prop=\"email\">\r\n                <el-input placeholder=\"请填写邮箱\" v-model=\"dataForm.email\"></el-input>\r\n              </el-form-item>\r\n            </el-tab-pane>\r\n          </el-tabs>\r\n        </el-col>\r\n        <el-col :span=\"8\">\r\n          <el-tabs type=\"border-card\" style=\"height:380px\">\r\n            <el-tab-pane label=\"上传头像\">\r\n              <el-form ref=\"dataForm\" :model=\"dataForm\" >\r\n                <el-upload class=\"avatar-uploader\" action=\"\" :show-file-list=\"false\" :on-success=\"handleAvatarSuccess\" :before-upload=\"beforeAvatarUpload\">\r\n                  <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\">\r\n                  <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n                </el-upload>\r\n              </el-form>\r\n            </el-tab-pane>\r\n          </el-tabs>\r\n        </el-col>\r\n      </el-row>\r\n      <el-row>\r\n        <el-col :span=\"24\">\r\n          <!-- <el-form-item label=\"角色\"> -->\r\n          <el-card class=\"box-card\">\r\n            <div class=\"text item\">\r\n              <el-form-item label=\"角色\">\r\n                <el-checkbox-group v-model=\"roleListDataByid\">\r\n                  <el-checkbox v-for=\"city in roleListDataList\" :label=\"city.key\" :key=\"city.key\" @change=\"roleChanges\">{{city.label}}</el-checkbox>\r\n                </el-checkbox-group>\r\n              </el-form-item>\r\n            </div>\r\n          </el-card>\r\n          <!-- </el-form-item> -->\r\n        </el-col>\r\n      </el-row>\r\n\r\n    </el-form>\r\n    <div slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"myVisible = false\">取消</el-button>\r\n      <!-- <el-button v-if=\"dialogStatus=='create'\" type=\"primary\" @click=\"createData\">保存</el-button> -->\r\n      <el-button type=\"primary\" @click=\"dataFormSubmit\">保存</el-button>\r\n    </div>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { isMobile, isEmail } from \"@/utils/validate\";\r\nimport {\r\n  addUser,\r\n  updUser,\r\n  getUserInfo\r\n  // uploadPicture\r\n} from \"@/api/auth/user\";\r\n// import { insertUserRole } from \"@/api/auth/roleUser\";\r\nimport { fetchRoleList } from \"@/api/auth/role\";\r\nimport head_Png from \"@/assets/default_head_title.png\";\r\n\r\nexport default {\r\n  props: [\"dialogStatus\", \"dialogFormVisible\"],\r\n  data() {\r\n    const idValidatePhone = (rule, value, callback) => {\r\n      if (!isMobile(value)) {\r\n        callback(new Error(\"请输入正确的手机号码\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    const idValidateEmail = (rule, value, callback) => {\r\n      if (!isEmail(value)) {\r\n        callback(new Error(\"请输入正确的邮箱号码\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n       head_Png,\r\n      myVisible: this.dialogFormVisible,\r\n      disabledInput: false,\r\n      imageUrl: '',\r\n      roleListDataList: [],\r\n      roleListDataByid: [],\r\n      checkListData: [],\r\n      statusMap: {\r\n        create: \"新增\",\r\n        update: \"编辑\"\r\n      },\r\n      dataForm: {\r\n        id: 0,\r\n        userId:0,\r\n        username: \"\",\r\n        password: \"\",\r\n        avatar: \"\",\r\n        mobile: \"\",\r\n        email: \"\",\r\n        status: 1,\r\n        account: \"\",\r\n        roleList: []\r\n      },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: \"用户名不能为空\" },\r\n          { max: 30, message: \"最多输入 30 个字符\", trigger: \"blur\" }\r\n        ],\r\n        password: [\r\n          { required: true, message: \"密码不能为空\" },\r\n          { max: 50, message: \"最多输入 50 个字符\", trigger: \"blur\" }\r\n        ],\r\n        realName: [{ max: 30, message: \"最多输入 30 个字符\", trigger: \"blur\" }],\r\n        phone: [\r\n          { required: true, trigger: \"blur\", validator: idValidatePhone },\r\n          { max: 20, message: \"最多输入 20 个字符\", trigger: \"blur\" }\r\n        ],\r\n        email: [\r\n          { required: true, trigger: \"blur\", validator: idValidateEmail },\r\n          { max: 50, message: \"最多输入 50 个字符\", trigger: \"blur\" }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  watch: {\r\n    dialogFormVisible(val) {\r\n      // 监听父元件中传来的dialogFormVisible属性是否变化，变化则赋值给副本myVisible\r\n      this.myVisible = val;\r\n    },\r\n    myVisible(val) {\r\n      // 修改父元件的值\r\n      this.$emit(\"update:dialogFormVisible\", val);\r\n    }\r\n  },\r\n  created() {\r\n    //  this.selectList()\r\n  },\r\n  methods: {\r\n    selectList(id) {\r\n      this.dataForm.id = id;\r\n      this.dataForm.userId = id;\r\n      this.roleListDataList = [];\r\n      fetchRoleList()\r\n        .then(response => {\r\n          for (let i = 0; i < response.data.data.length; i++) {\r\n            this.roleListDataList.push({\r\n              key: response.data.data[i].roleId,\r\n              label: response.data.data[i].roleName\r\n            });\r\n          }\r\n        })\r\n        .then(() => {\r\n          this.myVisible = true;\r\n          this.$nextTick(() => {\r\n            this.handleCreate = [];\r\n            this.$refs[\"dataForm\"].resetFields();\r\n          });\r\n        })\r\n        .then(() => {\r\n          if (!this.dataForm.id) {\r\n            this.disabledInput = false;\r\n            this.roleListDataByid = [];\r\n            this.resetDataForm();\r\n            this.imageUrl = this.head_Png\r\n          } else {\r\n            this.disabledInput = true;\r\n            // 修改\r\n            getUserInfo(this.dataForm.id).then(response => {\r\n              if (response.data && response.data.code === \"200\") {\r\n                var data = response.data.data;\r\n                this.dataForm.username = data.user.username;\r\n                // this.dataForm.avatar = data.avatar;\r\n                this.dataForm.mobile = data.user.mobile;\r\n                this.dataForm.email = data.user.email;\r\n                this.dataForm.status = data.user.status;\r\n                // this.dataForm.account = data.account;\r\n                this.roleListDataByid = data.roleList;\r\n                this.checkListData = this.roleListDataByid;\r\n                // if(data.avatar!=null && data.avatar!=\"\"){\r\n                //   this.imageUrl = \"data:image/jpg;base64,\" + data.avatar;\r\n                // }else{\r\n                  this.imageUrl = this.head_Png\r\n                // }\r\n                this.dataForm.password = \"\";\r\n              }\r\n            });\r\n          }\r\n        });\r\n    },\r\n    roleChanges(row) {\r\n      this.checkListData = this.roleListDataByid;\r\n    },\r\n    resetDataForm() {\r\n      this.dataForm = {\r\n        id: 0,\r\n        username: \"\",\r\n        password: \"\",\r\n        realName: \"\",\r\n        avatar: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        sex: \"\",\r\n        status: 1,\r\n        account: \"\",\r\n        roleIdList: []\r\n      };\r\n    },\r\n    dataFormSubmit() {\r\n      this.$refs[\"dataForm\"].validate(valid => {\r\n        if (valid) {\r\n          if (!this.dataForm.id) {\r\n            this.dataForm.roleIdList = this.checkListData;\r\n            this.$confirm(\"确定进行[新增]操作?\", \"提示\", {\r\n              type: \"warning\"\r\n            }).then(response => {\r\n             this.$loading.open();\r\n              addUser(this.dataForm).then(response => {\r\n                if (response.data.state == \"true\") {\r\n                  let callback = () => {\r\n                    this.myVisible = false;\r\n                    this.$emit(\"refreshDataList\");\r\n                  };\r\n                  this.$msg.showSuccess(\"新增成功\", callback);\r\n                } else {\r\n                  this.$msg.showError(1, response.data.msg);\r\n                  this.$loading.close();\r\n                }\r\n              });\r\n            });\r\n          } else {\r\n            this.dataForm.roleIdList = this.checkListData;\r\n            this.$confirm(\"确定进行[编辑]操作?\", \"提示\", {\r\n              type: \"warning\"\r\n            }).then(response => {\r\n              this.$loading.open();\r\n              updUser(this.dataForm).then(response => {\r\n                this.myVisible = false;\r\n                this.$nextTick(function() {\r\n                  if (response.data.state == \"true\") {\r\n                    let callback = () => {\r\n                      this.myVisible = false;\r\n                      this.$emit(\"refreshDataList\");\r\n                      if (\r\n                        this.$store.getters.username == this.dataForm.username\r\n                      ) {\r\n                        this.$store.commit(\"SET_AVATAR\", this.dataForm.avatar);\r\n                        this.$store.commit('set_user', data.data);\r\n                      }\r\n                    };\r\n                    this.$msg.showSuccess(\"编辑成功\", callback);\r\n                    this.$loading.close();\r\n                  } else {\r\n                    this.$msg.showError(1, response.data.msg);\r\n                    this.$loading.close();\r\n                  }\r\n                });\r\n              });\r\n            });\r\n          }\r\n        } else {\r\n        }\r\n      });\r\n    },\r\n    handleCancel() {\r\n      // 点击叉叉\r\n      var self = this;\r\n      self.myVisible = false;\r\n    },\r\n    handleAvatarSuccess(res, file) {\r\n      this.imageUrl = URL.createObjectURL(file.raw);\r\n    },\r\n    beforeAvatarUpload(file) {\r\n      const isJPG = file.type === \"image/jpeg\";\r\n      const isPNG = file.type === \"image/png\";\r\n      const isLt2M = file.size / 1024 / 1024 < 1;\r\n\r\n      if (!isJPG && !isPNG) {\r\n        this.$msg.showError(1, \"上传头像图片 只能是JPG 格式 或者 png格式!\");\r\n        return;\r\n      }\r\n      if (!isLt2M) {\r\n        this.$msg.showError(1, \"上传头像图片大小不能超过 1MB!\");\r\n        return;\r\n      }\r\n      this.uploadFile(file);\r\n      return isJPG && isLt2M;\r\n    },\r\n    uploadFile(file) {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      // uploadPicture(formData).then(response => {\r\n      //   if (response.data.state === \"true\") {\r\n      //     this.imageUrl = \"data:image/jpg;base64,\" + response.data.msg;\r\n      //     this.dataForm.avatar = response.data.msg;\r\n      //     this.$msg.showSuccess(\"上传成功\");\r\n      //   } else {\r\n      //     this.$msg.showError(1, response.data.msg);\r\n      //   }\r\n      // });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409eff;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  line-height: 178px;\r\n  text-align: center;\r\n  padding-top: 60px;\r\n}\r\n.avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n</style>\r\n\r\n"]}]}