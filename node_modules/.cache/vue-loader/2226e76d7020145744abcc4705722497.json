{"remainingRequest":"E:\\workspace\\code\\test\\my_project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\workspace\\code\\test\\my_project\\src\\views\\auth\\role\\edit_role.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\workspace\\code\\test\\my_project\\src\\views\\auth\\role\\edit_role.vue","mtime":1563023635780},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { validPhone, validateEmail } from \"@/utils/validate\";\r\nimport { addRole, updRole, getRoleInfo } from \"@/api/auth/role\";\r\n// import { getParentMenuList, getParentInterfaceList } from \"@/api/auth/resource\";\r\nimport { getParentMenuList } from \"@/api/auth/menu\";\r\n// import { addRoleResource, selectResourceByid } from \"@/api/auth/roleResource\";\r\nimport { treeDataTranslate } from \"@/utils\";\r\n\r\nexport default {\r\n  props: [\"dialogStatus\", \"dialogFormVisible\"],\r\n  data() {\r\n    return {\r\n      myVisible: this.dialogFormVisible,\r\n      buttonLoading: false,\r\n      disabledInput: false,\r\n      tempKey: \"-1\",\r\n      menuList: [],\r\n      menuListTreeProps: {\r\n        label: \"name\",\r\n        children: \"children\"\r\n      },\r\n      interListTreeProps: {\r\n        label: \"name\",\r\n        children: \"children\"\r\n      },\r\n      roleListData: [],\r\n      reList: [],\r\n      statusMap: {\r\n        create: \"新增\",\r\n        update: \"编辑\"\r\n      },\r\n      dataForm: {\r\n        id: 0,\r\n        roleId:0,\r\n        code: \"\",\r\n        roleName: \"\",\r\n        remark:'12',\r\n        menuIdList: [],\r\n        interList: []\r\n      },\r\n      props: {\r\n        id: \"id\",\r\n        label: \"name\",\r\n        children: \"children\"\r\n      },\r\n      rules: {\r\n        //username: [{ required: true, message: '用户名不能为空' }],\r\n        remark: [\r\n          { required: true, message: \"角色编号不能为空\" },\r\n          { max: 50, message: \"最多输入 50 个字符\", trigger: \"blur\" }\r\n        ],\r\n        roleName: [\r\n          { required: true, trigger: \"blur\", message: \"角色名称不能为空\" },\r\n          { max: 50, message: \"最多输入 50 个字符\", trigger: \"blur\" }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  watch: {\r\n    dialogFormVisible(val) {\r\n      // 监听父元件中传来的dialogFormVisible属性是否变化，变化则赋值给副本myVisible\r\n      this.myVisible = val;\r\n    },\r\n    myVisible(val) {\r\n      // 修改父元件的值\r\n      this.$emit(\"update:dialogFormVisible\", val);\r\n    }\r\n  },\r\n  created() {\r\n    // this.getResourceTreeList(id)\r\n  },\r\n  methods: {\r\n    getResourceTreeList(id) {\r\n      this.dataForm.id = id;\r\n      this.dataForm.roleId = id;\r\n      getParentMenuList().then(response => {\r\n          this.menuList = treeDataTranslate(response.data.data, \"menuId\");\r\n      }).then(() => {\r\n        this.myVisible = true;\r\n        this.$nextTick(() => {\r\n          this.$refs[\"dataForm\"].resetFields();\r\n          this.$refs.menuListTree.setCheckedKeys([]);\r\n          // this.$refs.interListTree.setCheckedKeys([]);\r\n        });\r\n      }).then(() => {\r\n        if (!this.dataForm.id) {\r\n          this.disabledInput = false;\r\n          this.buttonLoading = false;\r\n          // 新增\r\n          // this.menuListTreeSetCurrentNode()\r\n        } else {\r\n          // 修改\r\n          this.disabledInput = true;\r\n          getRoleInfo(this.dataForm.id).then(response => {\r\n            if (response.data && response.data.code === \"200\") {\r\n              var data = response.data.data;\r\n              this.dataForm.remark = data.role.remark;\r\n              this.dataForm.roleName = data.role.roleName;\r\n              var idx = data.menuList.indexOf(this.tempKey)\r\n              if (idx !== -1) {\r\n                data.role.menuIdList.splice(idx, data.menuList - idx)\r\n              }\r\n              this.$refs.menuListTree.setCheckedKeys(data.menuList);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    dataFormSubmit() {\r\n      this.$refs[\"dataForm\"].validate(valid => {\r\n        if (valid) {\r\n          if (!this.dataForm.id) {\r\n            this.dataForm.menuIdList = [].concat(\r\n              this.$refs.menuListTree.getCheckedKeys(),[this.tempKey],\r\n              this.$refs.menuListTree.getHalfCheckedKeys()\r\n            );\r\n            this.$confirm(\"确定进行[新增]操作?\", \"提示\", {\r\n              type: \"warning\"\r\n            }).then(() => {\r\n              this.$loading.open();\r\n              addRole(this.dataForm).then(response => {\r\n                if (response.data.state == \"true\") {\r\n                  let callback = () => {\r\n                    this.myVisible = false;\r\n                    this.$emit(\"refreshDataList\");\r\n                  };\r\n                  this.$msg.showSuccess(\"新增成功\", callback);\r\n                } else {\r\n                  this.$msg.showError(1, response.data.msg);\r\n                  this.$loading.close();\r\n                }\r\n              });\r\n            });\r\n          } else {\r\n            this.dataForm.menuIdList = [].concat(\r\n              this.$refs.menuListTree.getCheckedKeys(),\r\n              [this.tempKey],\r\n              this.$refs.menuListTree.getHalfCheckedKeys()\r\n            );\r\n            this.$confirm(\"确定进行[编辑]操作?\", \"提示\", {\r\n              type: \"warning\"\r\n            }).then(() => {\r\n              this.$loading.open();\r\n              updRole(this.dataForm).then(response => {\r\n                if (response.data.state == \"true\") {\r\n                  let callback = () => {\r\n                    this.myVisible = false;\r\n                    this.$emit(\"refreshDataList\");\r\n                  };\r\n                  this.$msg.showSuccess(\"编辑成功\", callback);\r\n                } else {\r\n                  this.$msg.showError(1, response.data.msg);\r\n                 this.$loading.close();\r\n                }\r\n              });\r\n            });\r\n          }\r\n        } else {\r\n        }\r\n      });\r\n    },\r\n    handleCancel() {\r\n      // 点击叉叉\r\n      this.myVisible = false;\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["edit_role.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"edit_role.vue","sourceRoot":"src/views/auth/role","sourcesContent":["<template>\r\n  <el-dialog width=\"60%\" :title=\"!dataForm.id ? '角色新增' : '角色编辑'\" :visible=\"myVisible\" :before-close=\"handleCancel\" :close-on-click-modal=false>\r\n    <el-form :rules=\"rules\" ref=\"dataForm\" :model=\"dataForm\" label-position=\"right\" label-width=\"100px\" style='margin:20px;'>\r\n      <el-row>\r\n        <el-col :span=\"12\">\r\n          <el-tabs type=\"border-card\">\r\n            <el-tab-pane label=\"角色基本信息\">\r\n              <div style=\"height:300px; \">\r\n                <el-form-item label=\"角色编号\" prop=\"remark\">\r\n                  <el-input placeholder=\"请填写角色编号\" v-bind:disabled=\"disabledInput\" v-model.trim=\"dataForm.remark\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"角色名称\" prop=\"roleName\">\r\n                  <el-input placeholder=\"请填写角色名称\" v-model.trim=\"dataForm.roleName\"></el-input>\r\n                </el-form-item>\r\n              </div>\r\n            </el-tab-pane>\r\n          </el-tabs>\r\n        </el-col>\r\n        <el-col :span=\"12\">\r\n          <el-tabs type=\"border-card\">\r\n            <el-tab-pane label=\"授权\">\r\n              <div style=\"height:300px; overflow-y:scroll; \">\r\n                <el-tree\r\n                :data=\"menuList\"\r\n                :props=\"menuListTreeProps\"\r\n                node-key=\"menuId\"\r\n                ref=\"menuListTree\"\r\n                :default-expand-all=\"true\"\r\n                show-checkbox>\r\n              </el-tree>\r\n              </div>\r\n            </el-tab-pane>\r\n          </el-tabs>\r\n        </el-col>\r\n        <!-- <el-col :span=\"8\">\r\n          <el-tabs type=\"border-card\">\r\n            <el-tab-pane label=\"接口\">\r\n              <div style=\"height:300px; overflow-y:scroll; \">\r\n                <el-tree :data=\"interList\" :props=\"interListTreeProps\" node-key=\"id\" ref=\"interListTree\" :default-expand-all=\"true\" show-checkbox>\r\n                </el-tree>\r\n              </div>\r\n            </el-tab-pane>\r\n          </el-tabs>\r\n        </el-col> -->\r\n      </el-row>\r\n    </el-form>\r\n    <div slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"myVisible = false\">取消</el-button>\r\n      <!-- <el-button @click=\"selectsss\">查询已有角色</el-button> -->\r\n      <el-button type=\"primary\" v-bind:loading=\"buttonLoading\" @click=\"dataFormSubmit\">保存</el-button>\r\n    </div>\r\n  </el-dialog>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { validPhone, validateEmail } from \"@/utils/validate\";\r\nimport { addRole, updRole, getRoleInfo } from \"@/api/auth/role\";\r\n// import { getParentMenuList, getParentInterfaceList } from \"@/api/auth/resource\";\r\nimport { getParentMenuList } from \"@/api/auth/menu\";\r\n// import { addRoleResource, selectResourceByid } from \"@/api/auth/roleResource\";\r\nimport { treeDataTranslate } from \"@/utils\";\r\n\r\nexport default {\r\n  props: [\"dialogStatus\", \"dialogFormVisible\"],\r\n  data() {\r\n    return {\r\n      myVisible: this.dialogFormVisible,\r\n      buttonLoading: false,\r\n      disabledInput: false,\r\n      tempKey: \"-1\",\r\n      menuList: [],\r\n      menuListTreeProps: {\r\n        label: \"name\",\r\n        children: \"children\"\r\n      },\r\n      interListTreeProps: {\r\n        label: \"name\",\r\n        children: \"children\"\r\n      },\r\n      roleListData: [],\r\n      reList: [],\r\n      statusMap: {\r\n        create: \"新增\",\r\n        update: \"编辑\"\r\n      },\r\n      dataForm: {\r\n        id: 0,\r\n        roleId:0,\r\n        code: \"\",\r\n        roleName: \"\",\r\n        remark:'12',\r\n        menuIdList: [],\r\n        interList: []\r\n      },\r\n      props: {\r\n        id: \"id\",\r\n        label: \"name\",\r\n        children: \"children\"\r\n      },\r\n      rules: {\r\n        //username: [{ required: true, message: '用户名不能为空' }],\r\n        remark: [\r\n          { required: true, message: \"角色编号不能为空\" },\r\n          { max: 50, message: \"最多输入 50 个字符\", trigger: \"blur\" }\r\n        ],\r\n        roleName: [\r\n          { required: true, trigger: \"blur\", message: \"角色名称不能为空\" },\r\n          { max: 50, message: \"最多输入 50 个字符\", trigger: \"blur\" }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  watch: {\r\n    dialogFormVisible(val) {\r\n      // 监听父元件中传来的dialogFormVisible属性是否变化，变化则赋值给副本myVisible\r\n      this.myVisible = val;\r\n    },\r\n    myVisible(val) {\r\n      // 修改父元件的值\r\n      this.$emit(\"update:dialogFormVisible\", val);\r\n    }\r\n  },\r\n  created() {\r\n    // this.getResourceTreeList(id)\r\n  },\r\n  methods: {\r\n    getResourceTreeList(id) {\r\n      this.dataForm.id = id;\r\n      this.dataForm.roleId = id;\r\n      getParentMenuList().then(response => {\r\n          this.menuList = treeDataTranslate(response.data.data, \"menuId\");\r\n      }).then(() => {\r\n        this.myVisible = true;\r\n        this.$nextTick(() => {\r\n          this.$refs[\"dataForm\"].resetFields();\r\n          this.$refs.menuListTree.setCheckedKeys([]);\r\n          // this.$refs.interListTree.setCheckedKeys([]);\r\n        });\r\n      }).then(() => {\r\n        if (!this.dataForm.id) {\r\n          this.disabledInput = false;\r\n          this.buttonLoading = false;\r\n          // 新增\r\n          // this.menuListTreeSetCurrentNode()\r\n        } else {\r\n          // 修改\r\n          this.disabledInput = true;\r\n          getRoleInfo(this.dataForm.id).then(response => {\r\n            if (response.data && response.data.code === \"200\") {\r\n              var data = response.data.data;\r\n              this.dataForm.remark = data.role.remark;\r\n              this.dataForm.roleName = data.role.roleName;\r\n              var idx = data.menuList.indexOf(this.tempKey)\r\n              if (idx !== -1) {\r\n                data.role.menuIdList.splice(idx, data.menuList - idx)\r\n              }\r\n              this.$refs.menuListTree.setCheckedKeys(data.menuList);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    dataFormSubmit() {\r\n      this.$refs[\"dataForm\"].validate(valid => {\r\n        if (valid) {\r\n          if (!this.dataForm.id) {\r\n            this.dataForm.menuIdList = [].concat(\r\n              this.$refs.menuListTree.getCheckedKeys(),[this.tempKey],\r\n              this.$refs.menuListTree.getHalfCheckedKeys()\r\n            );\r\n            this.$confirm(\"确定进行[新增]操作?\", \"提示\", {\r\n              type: \"warning\"\r\n            }).then(() => {\r\n              this.$loading.open();\r\n              addRole(this.dataForm).then(response => {\r\n                if (response.data.state == \"true\") {\r\n                  let callback = () => {\r\n                    this.myVisible = false;\r\n                    this.$emit(\"refreshDataList\");\r\n                  };\r\n                  this.$msg.showSuccess(\"新增成功\", callback);\r\n                } else {\r\n                  this.$msg.showError(1, response.data.msg);\r\n                  this.$loading.close();\r\n                }\r\n              });\r\n            });\r\n          } else {\r\n            this.dataForm.menuIdList = [].concat(\r\n              this.$refs.menuListTree.getCheckedKeys(),\r\n              [this.tempKey],\r\n              this.$refs.menuListTree.getHalfCheckedKeys()\r\n            );\r\n            this.$confirm(\"确定进行[编辑]操作?\", \"提示\", {\r\n              type: \"warning\"\r\n            }).then(() => {\r\n              this.$loading.open();\r\n              updRole(this.dataForm).then(response => {\r\n                if (response.data.state == \"true\") {\r\n                  let callback = () => {\r\n                    this.myVisible = false;\r\n                    this.$emit(\"refreshDataList\");\r\n                  };\r\n                  this.$msg.showSuccess(\"编辑成功\", callback);\r\n                } else {\r\n                  this.$msg.showError(1, response.data.msg);\r\n                 this.$loading.close();\r\n                }\r\n              });\r\n            });\r\n          }\r\n        } else {\r\n        }\r\n      });\r\n    },\r\n    handleCancel() {\r\n      // 点击叉叉\r\n      this.myVisible = false;\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}