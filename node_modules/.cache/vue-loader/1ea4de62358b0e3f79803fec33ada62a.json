{"remainingRequest":"E:\\workspace\\code\\test\\my_project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\workspace\\code\\test\\my_project\\src\\views\\layout\\main-navbar-update-password.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\workspace\\code\\test\\my_project\\src\\views\\layout\\main-navbar-update-password.vue","mtime":1562316221272},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { clearLoginInfo } from '@/utils'\nexport default {\n  data () {\n    var validateConfirmPassword = (rule, value, callback) => {\n      if (this.dataForm.newPassword !== value) {\n        callback(new Error('确认密码与新密码不一致'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      visible: false,\n      dataForm: {\n        password: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      dataRule: {\n        password: [\n          { required: true, message: '原密码不能为空', trigger: 'blur' }\n        ],\n        newPassword: [\n          { required: true, message: '新密码不能为空', trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, message: '确认密码不能为空', trigger: 'blur' },\n          { validator: validateConfirmPassword, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  computed: {\n    userName: {\n      get () { return this.$store.state.user.name }\n    },\n    mainTabs: {\n      get () { return this.$store.state.common.mainTabs },\n      set (val) { this.$store.commit('common/updateMainTabs', val) }\n    }\n  },\n  methods: {\n    // 初始化\n    init () {\n      this.visible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].resetFields()\n      })\n    },\n    // 表单提交\n    dataFormSubmit () {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          this.$http({\n            url: this.$http.adornUrl('/sys/user/password'),\n            method: 'post',\n            data: this.$http.adornData({\n              'password': this.dataForm.password,\n              'newPassword': this.dataForm.newPassword\n            })\n          }).then(({data}) => {\n            if (data && data.code === 0) {\n              this.$message({\n                message: '操作成功',\n                type: 'success',\n                duration: 1500,\n                onClose: () => {\n                  this.visible = false\n                  this.$nextTick(() => {\n                    this.mainTabs = []\n                    clearLoginInfo()\n                    this.$router.replace({ name: 'login' })\n                  })\n                }\n              })\n            } else {\n              this.$message.error(data.msg)\n            }\n          })\n        }\n      })\n    }\n  }\n}\n",{"version":3,"sources":["main-navbar-update-password.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main-navbar-update-password.vue","sourceRoot":"src/views/layout","sourcesContent":["<template>\r\n  <el-dialog\r\n    title=\"修改密码\"\r\n    :visible.sync=\"visible\"\r\n    :append-to-body=\"true\">\r\n    <el-form :model=\"dataForm\" :rules=\"dataRule\" ref=\"dataForm\" @keyup.enter.native=\"dataFormSubmit()\" label-width=\"80px\">\r\n      <el-form-item label=\"账号\">\r\n        <span>{{ userName }}</span>\r\n      </el-form-item>\r\n      <el-form-item label=\"原密码\" prop=\"password\">\r\n        <el-input type=\"password\" v-model=\"dataForm.password\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"新密码\" prop=\"newPassword\">\r\n        <el-input type=\"password\" v-model=\"dataForm.newPassword\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n        <el-input type=\"password\" v-model=\"dataForm.confirmPassword\"></el-input>\r\n      </el-form-item>\r\n    </el-form>\r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"visible = false\">取消</el-button>\r\n      <el-button type=\"primary\" @click=\"dataFormSubmit()\">确定</el-button>\r\n    </span>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\n  import { clearLoginInfo } from '@/utils'\r\n  export default {\r\n    data () {\r\n      var validateConfirmPassword = (rule, value, callback) => {\r\n        if (this.dataForm.newPassword !== value) {\r\n          callback(new Error('确认密码与新密码不一致'))\r\n        } else {\r\n          callback()\r\n        }\r\n      }\r\n      return {\r\n        visible: false,\r\n        dataForm: {\r\n          password: '',\r\n          newPassword: '',\r\n          confirmPassword: ''\r\n        },\r\n        dataRule: {\r\n          password: [\r\n            { required: true, message: '原密码不能为空', trigger: 'blur' }\r\n          ],\r\n          newPassword: [\r\n            { required: true, message: '新密码不能为空', trigger: 'blur' }\r\n          ],\r\n          confirmPassword: [\r\n            { required: true, message: '确认密码不能为空', trigger: 'blur' },\r\n            { validator: validateConfirmPassword, trigger: 'blur' }\r\n          ]\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      userName: {\r\n        get () { return this.$store.state.user.name }\r\n      },\r\n      mainTabs: {\r\n        get () { return this.$store.state.common.mainTabs },\r\n        set (val) { this.$store.commit('common/updateMainTabs', val) }\r\n      }\r\n    },\r\n    methods: {\r\n      // 初始化\r\n      init () {\r\n        this.visible = true\r\n        this.$nextTick(() => {\r\n          this.$refs['dataForm'].resetFields()\r\n        })\r\n      },\r\n      // 表单提交\r\n      dataFormSubmit () {\r\n        this.$refs['dataForm'].validate((valid) => {\r\n          if (valid) {\r\n            this.$http({\r\n              url: this.$http.adornUrl('/sys/user/password'),\r\n              method: 'post',\r\n              data: this.$http.adornData({\r\n                'password': this.dataForm.password,\r\n                'newPassword': this.dataForm.newPassword\r\n              })\r\n            }).then(({data}) => {\r\n              if (data && data.code === 0) {\r\n                this.$message({\r\n                  message: '操作成功',\r\n                  type: 'success',\r\n                  duration: 1500,\r\n                  onClose: () => {\r\n                    this.visible = false\r\n                    this.$nextTick(() => {\r\n                      this.mainTabs = []\r\n                      clearLoginInfo()\r\n                      this.$router.replace({ name: 'login' })\r\n                    })\r\n                  }\r\n                })\r\n              } else {\r\n                this.$message.error(data.msg)\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n"]}]}