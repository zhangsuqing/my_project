{"remainingRequest":"E:\\workspace\\code\\test\\my_project\\node_modules\\babel-loader\\lib\\index.js!E:\\workspace\\code\\test\\my_project\\src\\store\\modules\\common.js","dependencies":[{"path":"E:\\workspace\\code\\test\\my_project\\src\\store\\modules\\common.js","mtime":1562314716461},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["export default {\n  namespaced: true,\n  state: {\n    // 页面文档可视高度(随窗口改变大小)\n    documentClientHeight: 0,\n    // 导航条, 布局风格, defalut(默认) / inverse(反向)\n    navbarLayoutType: 'default',\n    // 侧边栏, 布局皮肤, light(浅色) / dark(黑色)\n    sidebarLayoutSkin: 'dark',\n    // 侧边栏, 折叠状态\n    sidebarFold: false,\n    // 侧边栏, 菜单\n    menuList: [],\n    menuActiveName: '',\n    // 内容, 是否需要刷新\n    contentIsNeedRefresh: false,\n    // 主入口标签页\n    mainTabs: [],\n    mainTabsActiveName: ''\n  },\n  mutations: {\n    updateDocumentClientHeight: function updateDocumentClientHeight(state, height) {\n      state.documentClientHeight = height;\n    },\n    updateNavbarLayoutType: function updateNavbarLayoutType(state, type) {\n      state.navbarLayoutType = type;\n    },\n    updateSidebarLayoutSkin: function updateSidebarLayoutSkin(state, skin) {\n      state.sidebarLayoutSkin = skin;\n    },\n    updateSidebarFold: function updateSidebarFold(state, fold) {\n      state.sidebarFold = fold;\n    },\n    updateMenuList: function updateMenuList(state, list) {\n      state.menuList = list;\n    },\n    updateMenuActiveName: function updateMenuActiveName(state, name) {\n      state.menuActiveName = name;\n    },\n    updateContentIsNeedRefresh: function updateContentIsNeedRefresh(state, status) {\n      state.contentIsNeedRefresh = status;\n    },\n    updateMainTabs: function updateMainTabs(state, tabs) {\n      state.mainTabs = tabs;\n    },\n    updateMainTabsActiveName: function updateMainTabsActiveName(state, name) {\n      state.mainTabsActiveName = name;\n    }\n  }\n};",{"version":3,"sources":["E:\\workspace\\code\\test\\my_project\\src\\store\\modules\\common.js"],"names":["namespaced","state","documentClientHeight","navbarLayoutType","sidebarLayoutSkin","sidebarFold","menuList","menuActiveName","contentIsNeedRefresh","mainTabs","mainTabsActiveName","mutations","updateDocumentClientHeight","height","updateNavbarLayoutType","type","updateSidebarLayoutSkin","skin","updateSidebarFold","fold","updateMenuList","list","updateMenuActiveName","name","updateContentIsNeedRefresh","status","updateMainTabs","tabs","updateMainTabsActiveName"],"mappings":"AAAA,eAAe;AACbA,EAAAA,UAAU,EAAE,IADC;AAEbC,EAAAA,KAAK,EAAE;AACL;AACAC,IAAAA,oBAAoB,EAAE,CAFjB;AAGL;AACAC,IAAAA,gBAAgB,EAAE,SAJb;AAKL;AACAC,IAAAA,iBAAiB,EAAE,MANd;AAOL;AACAC,IAAAA,WAAW,EAAE,KARR;AASL;AACAC,IAAAA,QAAQ,EAAE,EAVL;AAWLC,IAAAA,cAAc,EAAE,EAXX;AAYL;AACAC,IAAAA,oBAAoB,EAAE,KAbjB;AAcL;AACAC,IAAAA,QAAQ,EAAE,EAfL;AAgBLC,IAAAA,kBAAkB,EAAE;AAhBf,GAFM;AAoBbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,0BADS,sCACmBX,KADnB,EAC0BY,MAD1B,EACkC;AACzCZ,MAAAA,KAAK,CAACC,oBAAN,GAA6BW,MAA7B;AACD,KAHQ;AAITC,IAAAA,sBAJS,kCAIeb,KAJf,EAIsBc,IAJtB,EAI4B;AACnCd,MAAAA,KAAK,CAACE,gBAAN,GAAyBY,IAAzB;AACD,KANQ;AAOTC,IAAAA,uBAPS,mCAOgBf,KAPhB,EAOuBgB,IAPvB,EAO6B;AACpChB,MAAAA,KAAK,CAACG,iBAAN,GAA0Ba,IAA1B;AACD,KATQ;AAUTC,IAAAA,iBAVS,6BAUUjB,KAVV,EAUiBkB,IAVjB,EAUuB;AAC9BlB,MAAAA,KAAK,CAACI,WAAN,GAAoBc,IAApB;AACD,KAZQ;AAaTC,IAAAA,cAbS,0BAaOnB,KAbP,EAacoB,IAbd,EAaoB;AAC3BpB,MAAAA,KAAK,CAACK,QAAN,GAAiBe,IAAjB;AACD,KAfQ;AAgBTC,IAAAA,oBAhBS,gCAgBarB,KAhBb,EAgBoBsB,IAhBpB,EAgB0B;AACjCtB,MAAAA,KAAK,CAACM,cAAN,GAAuBgB,IAAvB;AACD,KAlBQ;AAmBTC,IAAAA,0BAnBS,sCAmBmBvB,KAnBnB,EAmB0BwB,MAnB1B,EAmBkC;AACzCxB,MAAAA,KAAK,CAACO,oBAAN,GAA6BiB,MAA7B;AACD,KArBQ;AAsBTC,IAAAA,cAtBS,0BAsBOzB,KAtBP,EAsBc0B,IAtBd,EAsBoB;AAC3B1B,MAAAA,KAAK,CAACQ,QAAN,GAAiBkB,IAAjB;AACD,KAxBQ;AAyBTC,IAAAA,wBAzBS,oCAyBiB3B,KAzBjB,EAyBwBsB,IAzBxB,EAyB8B;AACrCtB,MAAAA,KAAK,CAACS,kBAAN,GAA2Ba,IAA3B;AACD;AA3BQ;AApBE,CAAf","sourcesContent":["export default {\r\n  namespaced: true,\r\n  state: {\r\n    // 页面文档可视高度(随窗口改变大小)\r\n    documentClientHeight: 0,\r\n    // 导航条, 布局风格, defalut(默认) / inverse(反向)\r\n    navbarLayoutType: 'default',\r\n    // 侧边栏, 布局皮肤, light(浅色) / dark(黑色)\r\n    sidebarLayoutSkin: 'dark',\r\n    // 侧边栏, 折叠状态\r\n    sidebarFold: false,\r\n    // 侧边栏, 菜单\r\n    menuList: [],\r\n    menuActiveName: '',\r\n    // 内容, 是否需要刷新\r\n    contentIsNeedRefresh: false,\r\n    // 主入口标签页\r\n    mainTabs: [],\r\n    mainTabsActiveName: ''\r\n  },\r\n  mutations: {\r\n    updateDocumentClientHeight (state, height) {\r\n      state.documentClientHeight = height\r\n    },\r\n    updateNavbarLayoutType (state, type) {\r\n      state.navbarLayoutType = type\r\n    },\r\n    updateSidebarLayoutSkin (state, skin) {\r\n      state.sidebarLayoutSkin = skin\r\n    },\r\n    updateSidebarFold (state, fold) {\r\n      state.sidebarFold = fold\r\n    },\r\n    updateMenuList (state, list) {\r\n      state.menuList = list\r\n    },\r\n    updateMenuActiveName (state, name) {\r\n      state.menuActiveName = name\r\n    },\r\n    updateContentIsNeedRefresh (state, status) {\r\n      state.contentIsNeedRefresh = status\r\n    },\r\n    updateMainTabs (state, tabs) {\r\n      state.mainTabs = tabs\r\n    },\r\n    updateMainTabsActiveName (state, name) {\r\n      state.mainTabsActiveName = name\r\n    }\r\n  }\r\n}\r\n"]}]}