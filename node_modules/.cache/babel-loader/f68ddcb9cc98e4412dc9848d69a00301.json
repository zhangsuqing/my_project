{"remainingRequest":"E:\\workspace\\code\\test\\my_project\\node_modules\\babel-loader\\lib\\index.js!E:\\workspace\\code\\test\\my_project\\src\\router\\index.js","dependencies":[{"path":"E:\\workspace\\code\\test\\my_project\\src\\router\\index.js","mtime":1563009740491},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _objectSpread from \"E:\\\\workspace\\\\code\\\\test\\\\my_project\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread2\";\n\n/**\r\n * 全站路由配置\r\n *\r\n * 建议:\r\n * 1. 代码中路由统一使用name属性跳转(不使用path属性)\r\n */\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport http from '@/utils/httpRequest';\nimport { isURL } from '@/utils/validate';\nimport { clearLoginInfo } from '@/utils'; // import { isLogin } from \"@/api/login\";\n\nimport Layout from '@/views/layout/main';\nimport { getRouterMenuList } from '@/api/auth/menu';\nVue.use(Router); // 开发环境不使用懒加载, 因为懒加载页面太多的话会造成webpack热更新太慢, 所以只有生产环境使用懒加载\n\nvar _import = require('./import-' + process.env.NODE_ENV); // 全局路由(无需嵌套上左右整体布局)\n\n\nvar globalRoutes = [{\n  path: '/404',\n  component: _import('common/404'),\n  name: '404',\n  meta: {\n    title: '404未找到'\n  }\n}, {\n  path: '/login',\n  component: _import('common/login'),\n  name: 'login',\n  meta: {\n    title: '登录'\n  }\n}, {\n  path: '/403',\n  component: _import('common/login'),\n  name: 'login',\n  meta: {\n    title: '登录'\n  }\n}]; // 主入口路由(需嵌套上左右整体布局)\n\nvar mainRoutes = {\n  path: '/',\n  component: _import('layout/main'),\n  name: 'main',\n  redirect: {\n    name: 'home'\n  },\n  meta: {\n    title: '主入口整体布局'\n  },\n  children: [// 通过meta对象设置路由展示方式\n  // 1. isTab: 是否通过tab展示内容, true: 是, false: 否\n  // 2. iframeUrl: 是否通过iframe嵌套展示内容, '以http[s]://开头': 是, '': 否\n  // 提示: 如需要通过iframe嵌套展示内容, 但不通过tab打开, 请自行创建组件使用iframe处理!\n  {\n    path: '/home',\n    component: _import('common/home'),\n    name: 'home',\n    meta: {\n      title: '首页'\n    }\n  }, {\n    path: '/menu-list',\n    component: _import('auth/menu/menu'),\n    name: 'menu-list',\n    meta: {\n      title: '菜单管理',\n      isTab: true\n    }\n  }, {\n    path: '/role-list',\n    component: _import('auth/role/role'),\n    name: 'role-list',\n    meta: {\n      title: '角色管理',\n      isTab: true\n    }\n  }, {\n    path: '/user-list',\n    component: _import('auth/user/user'),\n    name: 'user-list',\n    meta: {\n      title: '活动管理',\n      isTab: true\n    }\n  }],\n  beforeEnter: function beforeEnter(to, from, next) {\n    var token = sessionStorage.getItem('token'); // isLogin().then(response => {\n    // let data = response.data;\n    // if (data && data.code === 0 && data.data == true) {\n    // next()\n    // }else{\n    // clearLoginInfo()\n    // next({\n    //   name: 'login'\n    // })\n    // }\n    // })\n\n    if (!token || !/\\S/.test(token)) {\n      clearLoginInfo();\n      next({\n        name: 'login'\n      });\n    }\n\n    next();\n  }\n};\nvar router = new Router({\n  mode: 'hash',\n  scrollBehavior: function scrollBehavior() {\n    return {\n      y: 0\n    };\n  },\n  isAddDynamicMenuRoutes: false,\n  // 是否已经添加动态(菜单)路由\n  routes: globalRoutes.concat(mainRoutes)\n});\nrouter.beforeEach(function (to, from, next) {\n  // 添加动态(菜单)路由\n  // 1. 已经添加 or 全局路由, 直接访问\n  // 2. 获取菜单列表, 添加并保存本地存储\n  if (router.options.isAddDynamicMenuRoutes || fnCurrentRouteType(to, globalRoutes) === 'global') {\n    next();\n  } else {\n    getRouterMenuList().then(function (response) {\n      var data = response.data;\n\n      if (data && data.code === '200') {\n        fnAddDynamicMenuRoutes(data.data.menuList);\n        router.options.isAddDynamicMenuRoutes = true;\n        sessionStorage.setItem('menuList', JSON.stringify(data.data.menuList || '[]'));\n        sessionStorage.setItem('permissions', []);\n        next(_objectSpread({}, to, {\n          replace: true\n        }));\n      } else {\n        sessionStorage.setItem('menuList', '[]');\n        sessionStorage.setItem('permissions', '[]');\n        next();\n      }\n    }).catch(function (e) {\n      console.log(\"%c\".concat(e, \" \\u8BF7\\u6C42\\u83DC\\u5355\\u5217\\u8868\\u548C\\u6743\\u9650\\u5931\\u8D25\\uFF0C\\u8DF3\\u8F6C\\u81F3\\u767B\\u5F55\\u9875\\uFF01\\uFF01\"), 'color:blue');\n      router.push({\n        name: 'login'\n      });\n    });\n  }\n});\n/**\r\n * 判断当前路由类型, global: 全局路由, main: 主入口路由\r\n * @param {*} route 当前路由\r\n */\n\nfunction fnCurrentRouteType(route) {\n  var globalRoutes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var temp = [];\n\n  for (var i = 0; i < globalRoutes.length; i++) {\n    if (route.path === globalRoutes[i].path) {\n      return 'global';\n    } else if (globalRoutes[i].children && globalRoutes[i].children.length >= 1) {\n      temp = temp.concat(globalRoutes[i].children);\n    }\n  }\n\n  return temp.length >= 1 ? fnCurrentRouteType(route, temp) : 'main';\n}\n/**\r\n * 添加动态(菜单)路由\r\n * @param {*} menuList 菜单列表\r\n * @param {*} routes 递归创建的动态(菜单)路由\r\n */\n\n\nfunction fnAddDynamicMenuRoutes() {\n  var menuList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var routes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var temp = [];\n\n  for (var i = 0; i < menuList.length; i++) {\n    if (menuList[i].list && menuList[i].list.length >= 1) {\n      temp = temp.concat(menuList[i].list);\n    } else if (menuList[i].url && /\\S/.test(menuList[i].url)) {\n      menuList[i].url = menuList[i].url.replace(/^\\//, '');\n      var route = {\n        path: menuList[i].url.replace('/', '-'),\n        component: null,\n        name: menuList[i].url.replace('/', '-'),\n        meta: {\n          menuId: menuList[i].menuId,\n          title: menuList[i].name,\n          isDynamic: true,\n          isTab: true,\n          iframeUrl: ''\n        } // url以http[s]://开头, 通过iframe展示\n\n      };\n\n      if (isURL(menuList[i].url)) {\n        route['path'] = \"i-\".concat(menuList[i].menuId);\n        route['name'] = \"i-\".concat(menuList[i].menuId);\n        route['meta']['iframeUrl'] = menuList[i].url;\n      } else {\n        try {\n          route['component'] = _import(\"modules/\".concat(menuList[i].url)) || null;\n        } catch (e) {}\n      }\n\n      routes.push(route);\n    }\n  }\n\n  if (temp.length >= 1) {\n    fnAddDynamicMenuRoutes(temp, routes);\n  } else {\n    mainRoutes.name = 'main-dynamic';\n    mainRoutes.children = routes;\n    router.addRoutes([mainRoutes, {\n      path: '*',\n      redirect: {\n        name: '404'\n      }\n    }]);\n    sessionStorage.setItem('dynamicMenuRoutes', JSON.stringify(mainRoutes.children || '[]'));\n    console.log('\\n');\n    console.log('%c!<-------------------- 动态(菜单)路由 s -------------------->', 'color:blue');\n    console.log(mainRoutes.children);\n    console.log('%c!<-------------------- 动态(菜单)路由 e -------------------->', 'color:blue');\n  }\n}\n\nexport default router;",{"version":3,"sources":["E:\\workspace\\code\\test\\my_project\\src\\router\\index.js"],"names":["Vue","Router","http","isURL","clearLoginInfo","Layout","getRouterMenuList","use","_import","require","process","env","NODE_ENV","globalRoutes","path","component","name","meta","title","mainRoutes","redirect","children","isTab","beforeEnter","to","from","next","token","sessionStorage","getItem","test","router","mode","scrollBehavior","y","isAddDynamicMenuRoutes","routes","concat","beforeEach","options","fnCurrentRouteType","then","response","data","code","fnAddDynamicMenuRoutes","menuList","setItem","JSON","stringify","replace","catch","e","console","log","push","route","temp","i","length","list","url","menuId","isDynamic","iframeUrl","addRoutes"],"mappings":"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","sourcesContent":["/**\r\n * 全站路由配置\r\n *\r\n * 建议:\r\n * 1. 代码中路由统一使用name属性跳转(不使用path属性)\r\n */\r\nimport Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport http from '@/utils/httpRequest'\r\nimport {\r\n  isURL\r\n} from '@/utils/validate'\r\nimport {\r\n  clearLoginInfo\r\n} from '@/utils'\r\n// import { isLogin } from \"@/api/login\";\r\nimport Layout from '@/views/layout/main'\r\nimport {getRouterMenuList} from '@/api/auth/menu'\r\n\r\nVue.use(Router)\r\n\r\n// 开发环境不使用懒加载, 因为懒加载页面太多的话会造成webpack热更新太慢, 所以只有生产环境使用懒加载\r\nconst _import = require('./import-' + process.env.NODE_ENV)\r\n\r\n// 全局路由(无需嵌套上左右整体布局)\r\nconst globalRoutes = [{\r\n    path: '/404',\r\n    component: _import('common/404'),\r\n    name: '404',\r\n    meta: {\r\n      title: '404未找到'\r\n    }\r\n  },\r\n  {\r\n    path: '/login',\r\n    component: _import('common/login'),\r\n    name: 'login',\r\n    meta: {\r\n      title: '登录'\r\n    }\r\n  },\r\n  {\r\n    path: '/403',\r\n    component: _import('common/login'),\r\n    name: 'login',\r\n    meta: {\r\n      title: '登录'\r\n    }\r\n  }\r\n]\r\n\r\n// 主入口路由(需嵌套上左右整体布局)\r\nconst mainRoutes = {\r\n  path: '/',\r\n  component: _import('layout/main'),\r\n  name: 'main',\r\n  redirect: {\r\n    name: 'home'\r\n  },\r\n  meta: {\r\n    title: '主入口整体布局'\r\n  },\r\n  children: [\r\n    // 通过meta对象设置路由展示方式\r\n    // 1. isTab: 是否通过tab展示内容, true: 是, false: 否\r\n    // 2. iframeUrl: 是否通过iframe嵌套展示内容, '以http[s]://开头': 是, '': 否\r\n    // 提示: 如需要通过iframe嵌套展示内容, 但不通过tab打开, 请自行创建组件使用iframe处理!\r\n    {\r\n      path: '/home',\r\n      component: _import('common/home'),\r\n      name: 'home',\r\n      meta: {\r\n        title: '首页'\r\n      }\r\n    },\r\n    {\r\n      path: '/menu-list',\r\n      component: _import('auth/menu/menu'),\r\n      name: 'menu-list',\r\n      meta: {\r\n        title: '菜单管理',\r\n        isTab: true\r\n      }\r\n    },\r\n    {\r\n      path: '/role-list',\r\n      component: _import('auth/role/role'),\r\n      name: 'role-list',\r\n      meta: {\r\n        title: '角色管理',\r\n        isTab: true\r\n      }\r\n    },\r\n    {\r\n      path: '/user-list',\r\n      component: _import('auth/user/user'),\r\n      name: 'user-list',\r\n      meta: {\r\n        title: '活动管理',\r\n        isTab: true\r\n      }\r\n    }\r\n  ],\r\n  beforeEnter(to, from, next) {\r\n    let token = sessionStorage.getItem('token')\r\n    // isLogin().then(response => {\r\n    // let data = response.data;\r\n    // if (data && data.code === 0 && data.data == true) {\r\n    // next()\r\n    // }else{\r\n    // clearLoginInfo()\r\n    // next({\r\n    //   name: 'login'\r\n    // })\r\n    // }\r\n    // })\r\n    if (!token || !/\\S/.test(token)) {\r\n      clearLoginInfo()\r\n      next({\r\n        name: 'login'\r\n      })\r\n    }\r\n    next()\r\n  }\r\n}\r\n\r\nconst router = new Router({\r\n  mode: 'hash',\r\n  scrollBehavior: () => ({\r\n    y: 0\r\n  }),\r\n  isAddDynamicMenuRoutes: false, // 是否已经添加动态(菜单)路由\r\n  routes: globalRoutes.concat(mainRoutes)\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  // 添加动态(菜单)路由\r\n  // 1. 已经添加 or 全局路由, 直接访问\r\n  // 2. 获取菜单列表, 添加并保存本地存储\r\n  if (router.options.isAddDynamicMenuRoutes || fnCurrentRouteType(to, globalRoutes) === 'global') {\r\n    next()\r\n  } else {\r\n    getRouterMenuList().then(response =>{\r\n      let data = response.data;\r\n      if (data && data.code === '200') {\r\n        fnAddDynamicMenuRoutes(data.data.menuList)\r\n        router.options.isAddDynamicMenuRoutes = true\r\n        sessionStorage.setItem('menuList', JSON.stringify(data.data.menuList || '[]'))\r\n        sessionStorage.setItem('permissions', [])\r\n        next({\r\n          ...to,\r\n          replace: true\r\n        })\r\n      } else {\r\n        sessionStorage.setItem('menuList', '[]')\r\n        sessionStorage.setItem('permissions', '[]')\r\n        next()\r\n      }\r\n    }).catch((e) => {\r\n      console.log(`%c${e} 请求菜单列表和权限失败，跳转至登录页！！`, 'color:blue')\r\n      router.push({\r\n        name: 'login'\r\n      })\r\n    })\r\n  }\r\n})\r\n\r\n/**\r\n * 判断当前路由类型, global: 全局路由, main: 主入口路由\r\n * @param {*} route 当前路由\r\n */\r\nfunction fnCurrentRouteType(route, globalRoutes = []) {\r\n  var temp = []\r\n  for (var i = 0; i < globalRoutes.length; i++) {\r\n    if (route.path === globalRoutes[i].path) {\r\n      return 'global'\r\n    } else if (globalRoutes[i].children && globalRoutes[i].children.length >= 1) {\r\n      temp = temp.concat(globalRoutes[i].children)\r\n    }\r\n  }\r\n  return temp.length >= 1 ? fnCurrentRouteType(route, temp) : 'main'\r\n}\r\n\r\n/**\r\n * 添加动态(菜单)路由\r\n * @param {*} menuList 菜单列表\r\n * @param {*} routes 递归创建的动态(菜单)路由\r\n */\r\nfunction fnAddDynamicMenuRoutes(menuList = [], routes = []) {\r\n  var temp = []\r\n  for (var i = 0; i < menuList.length; i++) {\r\n    if (menuList[i].list && menuList[i].list.length >= 1) {\r\n      temp = temp.concat(menuList[i].list)\r\n    } else if (menuList[i].url && /\\S/.test(menuList[i].url)) {\r\n      menuList[i].url = menuList[i].url.replace(/^\\//, '')\r\n      var route = {\r\n        path: menuList[i].url.replace('/', '-'),\r\n        component: null,\r\n        name: menuList[i].url.replace('/', '-'),\r\n        meta: {\r\n          menuId: menuList[i].menuId,\r\n          title: menuList[i].name,\r\n          isDynamic: true,\r\n          isTab: true,\r\n          iframeUrl: ''\r\n        }\r\n      }\r\n      // url以http[s]://开头, 通过iframe展示\r\n      if (isURL(menuList[i].url)) {\r\n        route['path'] = `i-${menuList[i].menuId}`\r\n        route['name'] = `i-${menuList[i].menuId}`\r\n        route['meta']['iframeUrl'] = menuList[i].url\r\n      } else {\r\n        try {\r\n          route['component'] = _import(`modules/${menuList[i].url}`) || null\r\n        } catch (e) {}\r\n      }\r\n      routes.push(route)\r\n    }\r\n  }\r\n  if (temp.length >= 1) {\r\n    fnAddDynamicMenuRoutes(temp, routes)\r\n  } else {\r\n    mainRoutes.name = 'main-dynamic'\r\n    mainRoutes.children = routes\r\n    router.addRoutes([\r\n      mainRoutes,\r\n      {\r\n        path: '*',\r\n        redirect: {\r\n          name: '404'\r\n        }\r\n      }\r\n    ])\r\n    sessionStorage.setItem('dynamicMenuRoutes', JSON.stringify(mainRoutes.children || '[]'))\r\n    console.log('\\n')\r\n    console.log('%c!<-------------------- 动态(菜单)路由 s -------------------->', 'color:blue')\r\n    console.log(mainRoutes.children)\r\n    console.log('%c!<-------------------- 动态(菜单)路由 e -------------------->', 'color:blue')\r\n  }\r\n}\r\n\r\nexport default router"]}]}