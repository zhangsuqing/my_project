{"remainingRequest":"E:\\workspace\\code\\test\\my_project\\node_modules\\babel-loader\\lib\\index.js!E:\\workspace\\code\\test\\my_project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\workspace\\code\\test\\my_project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\workspace\\code\\test\\my_project\\src\\views\\auth\\menu\\menu-add-or-update.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\workspace\\code\\test\\my_project\\src\\views\\auth\\menu\\menu-add-or-update.vue","mtime":1563008378352},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { treeDataTranslate } from \"@/utils\";\nimport { getParentMenuList, addMenu, getMenuInfo, updateMenu } from \"@/api/auth/menu\";\nexport default {\n  data: function data() {\n    var validateUrl = function validateUrl(rule, value, callback) {\n      if (!/\\S/.test(value)) {\n        callback(new Error(\"访问路径不能为空！\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      visible: false,\n      methodList: [{\n        key: \"post\",\n        label: \"post\"\n      }, {\n        key: \"get\",\n        label: \"get\"\n      }],\n      parentLevel: 0,\n      placeholderUri: \"请输入菜单简称，如：auth\",\n      dataForm: {\n        id: 0,\n        menuId: 0,\n        type: 0,\n        typeList: [\"目录\", \"菜单\", \"按钮\"],\n        name: \"\",\n        parentId: 0,\n        parentName: \"\",\n        url: \"\",\n        perms: '1212',\n        code: \"\",\n        orderNum: 0,\n        icon: \"121\",\n        method: \"\",\n        flag: false\n      },\n      iconList: [],\n      dataRule: {\n        name: [{\n          required: true,\n          message: \"菜单名称不能为空\",\n          trigger: \"blur\"\n        }, {\n          max: 50,\n          message: \"最多输入 50 个字符\",\n          trigger: \"blur\"\n        }],\n        parentName: [{\n          required: true,\n          message: \"上级菜单不能为空\",\n          trigger: \"change\"\n        }, {\n          max: 50,\n          message: \"最多输入 50 个字符\",\n          trigger: \"blur\"\n        }],\n        url: [{\n          required: true,\n          validator: validateUrl,\n          trigger: \"blur\"\n        }, {\n          max: 100,\n          message: \"最多输入 100 个字符\",\n          trigger: \"blur\"\n        }],\n        method: [{\n          required: true,\n          message: \"访问方式不能为空\",\n          trigger: \"change\"\n        }] // code: [\n        //   { required: true, message: \"授权标识不能为空\", trigger: \"change\" }\n        // ],\n        // icon: [\n        //   { required: true, message: \"菜单图标不能为空\", trigger: \"change\" }\n        // ]\n\n      },\n      menuList: [],\n      menuListTreeProps: {\n        label: \"name\",\n        children: \"children\"\n      }\n    };\n  },\n  created: function created() {// this.iconList = Icon.getNameList();\n  },\n  methods: {\n    init: function init(id) {\n      var _this = this;\n\n      this.dataForm.id = id;\n      this.dataForm.menuId = id;\n      getParentMenuList().then(function (response) {\n        _this.menuList = treeDataTranslate(response.data.data, \"menuId\");\n      }).then(function () {\n        _this.visible = true;\n\n        _this.$nextTick(function () {\n          _this.$refs[\"dataForm\"].resetFields();\n        });\n      }).then(function () {\n        if (!_this.dataForm.id) {\n          // 新增\n          _this.menuListTreeSetCurrentNode();\n        } else {\n          // 修改\n          getMenuInfo(_this.dataForm.id).then(function (response) {\n            if (response.data && response.data.code === \"200\") {\n              var data = response.data.data;\n              _this.dataForm.id = data.id;\n              _this.dataForm.type = data.type;\n              _this.dataForm.name = data.name;\n              _this.dataForm.parentId = data.parentId;\n              _this.dataForm.url = data.url; // this.dataForm.method = data.method;\n\n              _this.dataForm.orderNum = data.orderNum;\n              _this.dataForm.icon = data.icon;\n\n              _this.menuListTreeSetCurrentNode();\n            }\n          });\n        }\n      });\n    },\n    //单选按钮change事件\n    radioChange: function radioChange(type) {\n      if (type == 0) {\n        this.dataForm.uri = \"\";\n        this.dataForm.icon = \"\";\n        this.dataForm.parentId = 0;\n      } else {\n        this.dataForm.parentId = 0;\n      }\n\n      this.menuListTreeSetCurrentNode();\n    },\n    // 菜单树选中\n    menuListTreeCurrentChangeHandle: function menuListTreeCurrentChangeHandle(data, node) {\n      if (this.dataForm.type == 0 && data._level > 1) {\n        this.$msg.showWarning(\"当前菜单不能作为上级菜单,请更换！\");\n        return;\n      }\n\n      if (this.dataForm.type == 1 && data._level > 2) {\n        this.$msg.showWarning(\"当前菜单不能作为上级菜单,请更换！\");\n        return;\n      }\n\n      if (this.dataForm.type == 2 && data._level != 3) {\n        this.$msg.showWarning(\"当前菜单不能作为上级菜单,请更换！\");\n        return;\n      }\n\n      if (data._level == 2) {\n        this.placeholderUri = \"请输入页面地址，如:system/setting/index\";\n      }\n\n      if (data._level == 1) {\n        this.placeholderUri = \"请输入菜单简称，如：auth\";\n      }\n\n      this.parentLevel = data._level;\n      this.dataForm.parentId = data.menuId;\n      this.dataForm.parentName = data.name;\n    },\n    // 菜单树设置当前选中节点\n    menuListTreeSetCurrentNode: function menuListTreeSetCurrentNode() {\n      this.$refs.menuListTree.setCurrentKey(this.dataForm.parentId);\n      this.dataForm.parentName = (this.$refs.menuListTree.getCurrentNode() || {})[\"name\"];\n    },\n    // 图标选中\n    iconActiveHandle: function iconActiveHandle(iconName) {\n      this.dataForm.icon = iconName;\n    },\n    // 表单提交\n    dataFormSubmit: function dataFormSubmit() {\n      var _this2 = this;\n\n      if (this.dataForm.type == 1 && this.dataForm.parentId == 0) {\n        this.$msg.showSuccess(\"请更换上级菜单\");\n        return;\n      }\n\n      this.$refs[\"dataForm\"].validate(function (valid) {\n        if (valid) {\n          if (!_this2.dataForm.menuId) {\n            _this2.$confirm(\"确定进行[新增]操作?\", \"提示\", {\n              type: \"warning\"\n            }).then(function (response) {\n              _this2.$loading.open();\n\n              addMenu(_this2.dataForm).then(function (response) {\n                debugger;\n\n                if (response.data.state == \"true\") {\n                  var callback = function callback() {\n                    _this2.visible = false;\n\n                    _this2.$emit(\"refreshDataList\");\n                  };\n\n                  _this2.$msg.showSuccess(\"新增成功\", callback);\n                } else {\n                  _this2.$msg.showError(1, response.data.msg);\n\n                  _this2.$loading.close();\n                }\n              });\n            });\n          } else {\n            _this2.$confirm(\"确定进行[编辑]操作?\", \"提示\", {\n              type: \"warning\"\n            }).then(function (response) {\n              _this2.$loading.open();\n\n              updateMenu(_this2.dataForm).then(function (response) {\n                if (response.data.state == \"true\") {\n                  var callback = function callback() {\n                    _this2.visible = false;\n\n                    _this2.$emit(\"refreshDataList\");\n                  };\n\n                  _this2.$msg.showSuccess(\"编辑成功\", callback);\n                } else {\n                  _this2.$msg.showError(1, response.data.msg);\n\n                  _this2.$loading.close();\n                }\n              });\n            });\n          }\n        } else {}\n      });\n    }\n  }\n};",{"version":3,"sources":["menu-add-or-update.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-dialog :title=\"!dataForm.id ? '菜单新增' : '菜单编辑'\" :close-on-click-modal=\"false\" :visible.sync=\"visible\" width=\"40%\">\r\n    <el-alert title=\"提示\" type=\"warning\" show-icon class=\"clearfix\" description=\"\r\n              注意：一级菜单访问地址为名字简称。如：usermanager！/n\r\n              二级菜单访问地址为页面路径。如：auth/menu/menu\r\n              菜单的上级菜单只能是一级和二级，按钮的上级菜单只能是三级\r\n            \">\r\n    </el-alert>\r\n    <el-form :model=\"dataForm\" :rules=\"dataRule\" ref=\"dataForm\" @keyup.enter.native=\"dataFormSubmit()\" label-width=\"20%\" style=\"width:85%; margin:auto;\">\r\n      <el-form-item label=\"类型\" prop=\"type\">\r\n        <el-radio-group v-model=\"dataForm.type\">\r\n          <el-radio v-for=\"(type, index) in dataForm.typeList\" :label=\"index\" :key=\"index\" @change=\"radioChange(type)\">{{ type }}</el-radio>\r\n        </el-radio-group>\r\n      </el-form-item>\r\n      <el-form-item :label=\"dataForm.typeList[dataForm.type] + '名称'\" prop=\"name\">\r\n        <el-input v-model=\"dataForm.name\" :placeholder=\"dataForm.typeList[dataForm.type] + '名称'\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"上级菜单\" prop=\"parentName\">\r\n        <el-popover ref=\"menuListPopover\" placement=\"bottom-start\" trigger=\"click\" style=\"height: 250px;min-width:300px!important;\">\r\n          <el-tree \r\n            style=\"height: 230px;min-width:280px!important; overflow-y: scroll;overflow-x:visible\" \r\n            :data=\"menuList\" \r\n            :props=\"menuListTreeProps\" \r\n            node-key=\"menuId\" \r\n            ref=\"menuListTree\"\r\n            @current-change=\"menuListTreeCurrentChangeHandle\" \r\n            :default-expanded-keys=\"[0]\" \r\n            :highlight-current=\"true\" \r\n            :expand-on-click-node=\"false\">\r\n          </el-tree>\r\n        </el-popover>\r\n        <el-input v-model=\"dataForm.parentName\" v-popover:menuListPopover :readonly=\"true\" placeholder=\"点击选择上级菜单\" class=\"menu-list__input\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item v-if=\"dataForm.type == 1\" label=\"访问路径\" prop=\"url\">\r\n        <el-input v-model=\"dataForm.url\" :placeholder=\"placeholderUri\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"排序号\" prop=\"orderNum\">\r\n        <el-input-number v-model=\"dataForm.orderNum\" :min=\"0\" label=\"排序号\" style=\"width:100%\"></el-input-number>\r\n      </el-form-item>\r\n      <!-- <el-form-item v-if=\"dataForm.type !== 2\" label=\"菜单图标\" prop=\"icon\">\r\n        <el-row>\r\n          <el-col :span=\"22\">\r\n             <el-popover\r\n              ref=\"iconListPopover\"\r\n              placement=\"bottom-start\"\r\n              trigger=\"click\"\r\n              popper-class=\"mod-menu__icon-popover\">\r\n              <div class=\"mod-menu__icon-inner\">\r\n                <div class=\"mod-menu__icon-list\">\r\n                  <el-button\r\n                    v-for=\"(item, index) in iconList\"\r\n                    :key=\"index\"\r\n                    @click=\"iconActiveHandle(item)\"\r\n                    :class=\"{ 'is-active': item === dataForm.icon }\">\r\n                    <icon-svg :name=\"item\"></icon-svg>\r\n                  </el-button>\r\n                </div>\r\n              </div>\r\n            </el-popover>\r\n            <el-input v-model=\"dataForm.icon\" v-popover:iconListPopover :readonly=\"true\" placeholder=\"菜单图标名称\" class=\"icon-list__input\"></el-input>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form-item> -->\r\n    </el-form>\r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"visible = false\">取消</el-button>\r\n      <el-button type=\"primary\" @click=\"dataFormSubmit()\">确定</el-button>\r\n    </span>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { treeDataTranslate } from \"@/utils\";\r\nimport {\r\n  getParentMenuList,\r\n  addMenu,\r\n  getMenuInfo,\r\n  updateMenu\r\n} from \"@/api/auth/menu\";\r\nexport default {\r\n  data() {\r\n    var validateUrl = (rule, value, callback) => {\r\n      if (!/\\S/.test(value)) {\r\n        callback(new Error(\"访问路径不能为空！\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      visible: false,\r\n      methodList: [\r\n        { key: \"post\", label: \"post\" },\r\n        { key: \"get\", label: \"get\" }\r\n      ],\r\n      parentLevel: 0,\r\n      placeholderUri:\"请输入菜单简称，如：auth\",\r\n      dataForm: {\r\n        id: 0,\r\n        menuId:0,\r\n        type: 0,\r\n        typeList: [\"目录\",\"菜单\", \"按钮\"],\r\n        name: \"\",\r\n        parentId: 0,\r\n        parentName: \"\",\r\n        url: \"\",\r\n        perms:'1212',\r\n        code: \"\",\r\n        orderNum: 0,\r\n        icon: \"121\",\r\n        method: \"\",\r\n        flag: false,\r\n      },\r\n      iconList: [],\r\n      dataRule: {\r\n        name: [\r\n          { required: true, message: \"菜单名称不能为空\", trigger: \"blur\" },\r\n          { max: 50, message: \"最多输入 50 个字符\", trigger: \"blur\" }\r\n        ],\r\n        parentName: [\r\n          { required: true, message: \"上级菜单不能为空\", trigger: \"change\" },\r\n          { max: 50, message: \"最多输入 50 个字符\", trigger: \"blur\" }\r\n        ],\r\n        url: [\r\n          { required: true, validator: validateUrl, trigger: \"blur\" },\r\n          { max: 100, message: \"最多输入 100 个字符\", trigger: \"blur\" }\r\n        ],\r\n        method: [\r\n          { required: true, message: \"访问方式不能为空\", trigger: \"change\" }\r\n        ],\r\n        // code: [\r\n        //   { required: true, message: \"授权标识不能为空\", trigger: \"change\" }\r\n        // ],\r\n        // icon: [\r\n        //   { required: true, message: \"菜单图标不能为空\", trigger: \"change\" }\r\n        // ]\r\n      },\r\n      menuList: [],\r\n      menuListTreeProps: {\r\n        label: \"name\",\r\n        children: \"children\"\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    // this.iconList = Icon.getNameList();\r\n  },\r\n  methods: {\r\n    init(id) {\r\n      this.dataForm.id = id;\r\n      this.dataForm.menuId = id;\r\n      getParentMenuList()\r\n        .then(response => {\r\n          this.menuList = treeDataTranslate(response.data.data, \"menuId\");\r\n        })\r\n        .then(() => {\r\n          this.visible = true;\r\n          this.$nextTick(() => {\r\n            this.$refs[\"dataForm\"].resetFields();\r\n          });\r\n        })\r\n        .then(() => {\r\n          if (!this.dataForm.id) {\r\n            // 新增\r\n            this.menuListTreeSetCurrentNode();\r\n          } else {\r\n            // 修改\r\n            getMenuInfo(this.dataForm.id).then(response => {\r\n              if (response.data && response.data.code === \"200\") {\r\n                var data = response.data.data;\r\n                this.dataForm.id = data.id;\r\n                this.dataForm.type = data.type;\r\n                this.dataForm.name = data.name;\r\n                this.dataForm.parentId = data.parentId;\r\n                this.dataForm.url = data.url;\r\n                // this.dataForm.method = data.method;\r\n                this.dataForm.orderNum = data.orderNum;\r\n                this.dataForm.icon = data.icon;\r\n                this.menuListTreeSetCurrentNode();\r\n              }\r\n            });\r\n          }\r\n        });\r\n    },\r\n    //单选按钮change事件\r\n    radioChange(type) {\r\n      if (type == 0) {\r\n        this.dataForm.uri = \"\";\r\n        this.dataForm.icon = \"\";\r\n        this.dataForm.parentId = 0;\r\n      } else {\r\n        this.dataForm.parentId = 0;\r\n      }\r\n      this.menuListTreeSetCurrentNode();\r\n    },\r\n    // 菜单树选中\r\n    menuListTreeCurrentChangeHandle(data, node) {\r\n      if (this.dataForm.type == 0 && data._level > 1) {\r\n        this.$msg.showWarning(\"当前菜单不能作为上级菜单,请更换！\");\r\n        return;\r\n      }\r\n      if (this.dataForm.type == 1 && data._level > 2) {\r\n        this.$msg.showWarning(\"当前菜单不能作为上级菜单,请更换！\");\r\n        return;\r\n      }\r\n      if (this.dataForm.type == 2 && data._level != 3) {\r\n        this.$msg.showWarning(\"当前菜单不能作为上级菜单,请更换！\");\r\n        return;\r\n      }\r\n      if (data._level == 2) {\r\n        this.placeholderUri = \"请输入页面地址，如:system/setting/index\";\r\n      }\r\n      if (data._level == 1) {\r\n        this.placeholderUri = \"请输入菜单简称，如：auth\";\r\n      }\r\n      this.parentLevel = data._level;\r\n      this.dataForm.parentId = data.menuId;\r\n      this.dataForm.parentName = data.name;\r\n    },\r\n    // 菜单树设置当前选中节点\r\n    menuListTreeSetCurrentNode() {\r\n      this.$refs.menuListTree.setCurrentKey(this.dataForm.parentId);\r\n      this.dataForm.parentName = (this.$refs.menuListTree.getCurrentNode() ||\r\n        {})[\"name\"];\r\n    },\r\n    // 图标选中\r\n    iconActiveHandle(iconName) {\r\n      this.dataForm.icon = iconName;\r\n    },\r\n    // 表单提交\r\n    dataFormSubmit() {\r\n      if (this.dataForm.type == 1 && this.dataForm.parentId == 0) {\r\n        this.$msg.showSuccess(\"请更换上级菜单\");\r\n        return;\r\n      }\r\n      this.$refs[\"dataForm\"].validate(valid => {\r\n        if (valid) {\r\n          if (!this.dataForm.menuId) {\r\n            this.$confirm(\"确定进行[新增]操作?\", \"提示\", {\r\n              type: \"warning\"\r\n            }).then(response => {\r\n              this.$loading.open();\r\n              addMenu(this.dataForm).then(response => {\r\n                debugger\r\n                if (response.data.state == \"true\") {\r\n                  let callback = () => {\r\n                    this.visible = false;\r\n                    this.$emit(\"refreshDataList\");\r\n                  };\r\n                  this.$msg.showSuccess(\"新增成功\", callback);\r\n                } else {\r\n                  this.$msg.showError(1, response.data.msg);\r\n                  this.$loading.close();\r\n                }\r\n              });\r\n            });\r\n          } else {\r\n            this.$confirm(\"确定进行[编辑]操作?\", \"提示\", {\r\n              type: \"warning\"\r\n            }).then(response => {\r\n              this.$loading.open();\r\n              updateMenu(this.dataForm).then(response => {\r\n                if (response.data.state == \"true\") {\r\n                  let callback = () => {\r\n                    this.visible = false;\r\n                    this.$emit(\"refreshDataList\");\r\n                  };\r\n                  this.$msg.showSuccess(\"编辑成功\", callback);\r\n                } else {\r\n                  this.$msg.showError(1, response.data.msg);\r\n                  this.$loading.close();\r\n                }\r\n              });\r\n            });\r\n          }\r\n        } else {\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.el-popper[x-placement^=\"top\"] {\r\n  overflow-y: scroll;\r\n  min-width: 200px;\r\n}\r\n.mod-menu {\r\n  .menu-list__input,\r\n  .icon-list__input {\r\n    > .el-input__inner {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  &__icon-popover {\r\n    max-width: 27%;\r\n  }\r\n  &__icon-list {\r\n    max-height: 250px;\r\n    padding: 0;\r\n    margin: -8px 0 0 -8px;\r\n    > .el-button {\r\n      padding: 8px;\r\n      margin: 8px 0 0 8px;\r\n      > span {\r\n        display: inline-block;\r\n        vertical-align: middle;\r\n        width: 18px;\r\n        height: 18px;\r\n        font-size: 18px;\r\n      }\r\n    }\r\n  }\r\n  .icon-list__tips {\r\n    font-size: 18px;\r\n    text-align: center;\r\n    color: #e6a23c;\r\n    cursor: pointer;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/auth/menu"}]}