{"remainingRequest":"E:\\workspace\\code\\test\\my_project\\node_modules\\babel-loader\\lib\\index.js!E:\\workspace\\code\\test\\my_project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\workspace\\code\\test\\my_project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\workspace\\code\\test\\my_project\\src\\views\\layout\\main-sidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\workspace\\code\\test\\my_project\\src\\views\\layout\\main-sidebar.vue","mtime":1563008169511},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.filter\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SubMenu from \"./main-sidebar-sub-menu\";\nimport { isURL } from '@/utils/validate';\nexport default {\n  data: function data() {\n    return {\n      dynamicMenuRoutes: []\n    };\n  },\n  components: {\n    SubMenu: SubMenu\n  },\n  computed: {\n    sidebarLayoutSkin: {\n      get: function get() {\n        return this.$store.state.common.sidebarLayoutSkin;\n      }\n    },\n    sidebarFold: {\n      get: function get() {\n        return this.$store.state.common.sidebarFold;\n      }\n    },\n    menuList: {\n      get: function get() {\n        return this.$store.state.common.menuList;\n      },\n      set: function set(val) {\n        this.$store.commit('common/updateMenuList', val);\n      }\n    },\n    menuActiveName: {\n      get: function get() {\n        return this.$store.state.common.menuActiveName;\n      },\n      set: function set(val) {\n        this.$store.commit('common/updateMenuActiveName', val);\n      }\n    },\n    mainTabs: {\n      get: function get() {\n        return this.$store.state.common.mainTabs;\n      },\n      set: function set(val) {\n        this.$store.commit('common/updateMainTabs', val);\n      }\n    },\n    mainTabsActiveName: {\n      get: function get() {\n        return this.$store.state.common.mainTabsActiveName;\n      },\n      set: function set(val) {\n        this.$store.commit('common/updateMainTabsActiveName', val);\n      }\n    }\n  },\n  watch: {\n    $route: 'routeHandle'\n  },\n  created: function created() {\n    this.menuList = JSON.parse(sessionStorage.getItem('menuList') || '[]');\n    this.dynamicMenuRoutes = JSON.parse(sessionStorage.getItem('dynamicMenuRoutes') || '[]');\n    this.routeHandle(this.$route);\n  },\n  methods: {\n    // 路由操作\n    routeHandle: function routeHandle(route) {\n      if (route.meta.isTab) {\n        // tab选中, 不存在先添加\n        var tab = this.mainTabs.filter(function (item) {\n          return item.name === route.name;\n        })[0];\n\n        if (!tab) {\n          if (route.meta.isDynamic) {\n            route = this.dynamicMenuRoutes.filter(function (item) {\n              return item.name === route.name;\n            })[0];\n\n            if (!route) {\n              return console.error('未能找到可用标签页!');\n            }\n          }\n\n          tab = {\n            menuId: route.meta.menuId || route.name,\n            name: route.name,\n            title: route.meta.title,\n            type: isURL(route.meta.iframeUrl) ? 'iframe' : 'module',\n            iframeUrl: route.meta.iframeUrl || '',\n            params: route.params,\n            query: route.query\n          };\n          this.mainTabs = this.mainTabs.concat(tab);\n        }\n\n        this.menuActiveName = tab.menuId + '';\n        this.mainTabsActiveName = tab.name;\n      }\n    }\n  }\n};",{"version":3,"sources":["main-sidebar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <aside class=\"site-sidebar\" :class=\"'site-sidebar--' + sidebarLayoutSkin\">\r\n    <div class=\"site-sidebar__inner\">\r\n      <el-menu\r\n        :default-active=\"menuActiveName || 'home'\"\r\n        :collapse=\"sidebarFold\"\r\n        :collapseTransition=\"false\"\r\n        class=\"site-sidebar__menu\">\r\n        <el-menu-item index=\"home\" @click=\"$router.push({ name: 'home' })\">\r\n          <i class=\"el-icon-house\"></i>\r\n          <span slot=\"title\">首页</span>\r\n        </el-menu-item>\r\n        <el-submenu index=\"demo\">\r\n          <template slot=\"title\">\r\n            <i class=\"el-icon-setting\"></i>\r\n            <span>权限管理</span>\r\n          </template>\r\n          <!-- <el-menu-item index=\"prize-list\" @click=\"$router.push({ name: 'prize-list' })\">\r\n            <i class=\"el-icon-menu\"></i>\r\n            <span slot=\"title\">奖品管理</span>\r\n          </el-menu-item> -->\r\n          <el-menu-item index=\"menu-list\" @click=\"$router.push({ name: 'menu-list' })\">\r\n             <i class=\"el-icon-menu\"></i>\r\n            <span slot=\"title\">菜单管理</span>\r\n          </el-menu-item>\r\n          <el-menu-item index=\"role-list\" @click=\"$router.push({ name: 'role-list' })\">\r\n             <i class=\"el-icon-menu\"></i>\r\n            <span slot=\"title\">角色管理</span>\r\n          </el-menu-item>\r\n          <el-menu-item index=\"user-list\" @click=\"$router.push({ name: 'user-list' })\">\r\n             <i class=\"el-icon-menu\"></i>\r\n            <span slot=\"title\">用户管理</span>\r\n          </el-menu-item>\r\n        </el-submenu>\r\n        <sub-menu\r\n          v-for=\"menu in menuList\"\r\n          :key=\"menu.menuId\"\r\n          :menu=\"menu\"\r\n          :dynamicMenuRoutes=\"dynamicMenuRoutes\">\r\n        </sub-menu>\r\n      </el-menu>\r\n    </div>\r\n  </aside>\r\n</template>\r\n\r\n<script>\r\n  import SubMenu from './main-sidebar-sub-menu'\r\n  import { isURL } from '@/utils/validate'\r\n  export default {\r\n    data () {\r\n      return {\r\n        dynamicMenuRoutes: []\r\n      }\r\n    },\r\n    components: {\r\n      SubMenu\r\n    },\r\n    computed: {\r\n      sidebarLayoutSkin: {\r\n        get () { return this.$store.state.common.sidebarLayoutSkin }\r\n      },\r\n      sidebarFold: {\r\n        get () { return this.$store.state.common.sidebarFold }\r\n      },\r\n      menuList: {\r\n        get () { return this.$store.state.common.menuList },\r\n        set (val) { this.$store.commit('common/updateMenuList', val) }\r\n      },\r\n      menuActiveName: {\r\n        get () { return this.$store.state.common.menuActiveName },\r\n        set (val) { this.$store.commit('common/updateMenuActiveName', val) }\r\n      },\r\n      mainTabs: {\r\n        get () { return this.$store.state.common.mainTabs },\r\n        set (val) { this.$store.commit('common/updateMainTabs', val) }\r\n      },\r\n      mainTabsActiveName: {\r\n        get () { return this.$store.state.common.mainTabsActiveName },\r\n        set (val) { this.$store.commit('common/updateMainTabsActiveName', val) }\r\n      }\r\n    },\r\n    watch: {\r\n      $route: 'routeHandle'\r\n    },\r\n    created () {\r\n      this.menuList = JSON.parse(sessionStorage.getItem('menuList') || '[]')\r\n      this.dynamicMenuRoutes = JSON.parse(sessionStorage.getItem('dynamicMenuRoutes') || '[]')\r\n      this.routeHandle(this.$route)\r\n    },\r\n    methods: {\r\n      // 路由操作\r\n      routeHandle (route) {\r\n        if (route.meta.isTab) {\r\n          // tab选中, 不存在先添加\r\n          var tab = this.mainTabs.filter(item => item.name === route.name)[0]\r\n          if (!tab) {\r\n            if (route.meta.isDynamic) {\r\n              route = this.dynamicMenuRoutes.filter(item => item.name === route.name)[0]\r\n              if (!route) {\r\n                return console.error('未能找到可用标签页!')\r\n              }\r\n            }\r\n            tab = {\r\n              menuId: route.meta.menuId || route.name,\r\n              name: route.name,\r\n              title: route.meta.title,\r\n              type: isURL(route.meta.iframeUrl) ? 'iframe' : 'module',\r\n              iframeUrl: route.meta.iframeUrl || '',\r\n              params: route.params,\r\n              query: route.query\r\n            }\r\n            this.mainTabs = this.mainTabs.concat(tab)\r\n          }\r\n          this.menuActiveName = tab.menuId + ''\r\n          this.mainTabsActiveName = tab.name\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/views/layout"}]}