{"remainingRequest":"E:\\workspace\\code\\test\\my_project\\node_modules\\babel-loader\\lib\\index.js!E:\\workspace\\code\\test\\my_project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\workspace\\code\\test\\my_project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\workspace\\code\\test\\my_project\\src\\views\\layout\\main-navbar-update-password.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\workspace\\code\\test\\my_project\\src\\views\\layout\\main-navbar-update-password.vue","mtime":1562316221272},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { clearLoginInfo } from '@/utils';\nexport default {\n  data: function data() {\n    var _this = this;\n\n    var validateConfirmPassword = function validateConfirmPassword(rule, value, callback) {\n      if (_this.dataForm.newPassword !== value) {\n        callback(new Error('确认密码与新密码不一致'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      visible: false,\n      dataForm: {\n        password: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      dataRule: {\n        password: [{\n          required: true,\n          message: '原密码不能为空',\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          message: '新密码不能为空',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          required: true,\n          message: '确认密码不能为空',\n          trigger: 'blur'\n        }, {\n          validator: validateConfirmPassword,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    userName: {\n      get: function get() {\n        return this.$store.state.user.name;\n      }\n    },\n    mainTabs: {\n      get: function get() {\n        return this.$store.state.common.mainTabs;\n      },\n      set: function set(val) {\n        this.$store.commit('common/updateMainTabs', val);\n      }\n    }\n  },\n  methods: {\n    // 初始化\n    init: function init() {\n      var _this2 = this;\n\n      this.visible = true;\n      this.$nextTick(function () {\n        _this2.$refs['dataForm'].resetFields();\n      });\n    },\n    // 表单提交\n    dataFormSubmit: function dataFormSubmit() {\n      var _this3 = this;\n\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          _this3.$http({\n            url: _this3.$http.adornUrl('/sys/user/password'),\n            method: 'post',\n            data: _this3.$http.adornData({\n              'password': _this3.dataForm.password,\n              'newPassword': _this3.dataForm.newPassword\n            })\n          }).then(function (_ref) {\n            var data = _ref.data;\n\n            if (data && data.code === 0) {\n              _this3.$message({\n                message: '操作成功',\n                type: 'success',\n                duration: 1500,\n                onClose: function onClose() {\n                  _this3.visible = false;\n\n                  _this3.$nextTick(function () {\n                    _this3.mainTabs = [];\n                    clearLoginInfo();\n\n                    _this3.$router.replace({\n                      name: 'login'\n                    });\n                  });\n                }\n              });\n            } else {\n              _this3.$message.error(data.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["main-navbar-update-password.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-dialog\r\n    title=\"修改密码\"\r\n    :visible.sync=\"visible\"\r\n    :append-to-body=\"true\">\r\n    <el-form :model=\"dataForm\" :rules=\"dataRule\" ref=\"dataForm\" @keyup.enter.native=\"dataFormSubmit()\" label-width=\"80px\">\r\n      <el-form-item label=\"账号\">\r\n        <span>{{ userName }}</span>\r\n      </el-form-item>\r\n      <el-form-item label=\"原密码\" prop=\"password\">\r\n        <el-input type=\"password\" v-model=\"dataForm.password\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"新密码\" prop=\"newPassword\">\r\n        <el-input type=\"password\" v-model=\"dataForm.newPassword\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n        <el-input type=\"password\" v-model=\"dataForm.confirmPassword\"></el-input>\r\n      </el-form-item>\r\n    </el-form>\r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"visible = false\">取消</el-button>\r\n      <el-button type=\"primary\" @click=\"dataFormSubmit()\">确定</el-button>\r\n    </span>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\n  import { clearLoginInfo } from '@/utils'\r\n  export default {\r\n    data () {\r\n      var validateConfirmPassword = (rule, value, callback) => {\r\n        if (this.dataForm.newPassword !== value) {\r\n          callback(new Error('确认密码与新密码不一致'))\r\n        } else {\r\n          callback()\r\n        }\r\n      }\r\n      return {\r\n        visible: false,\r\n        dataForm: {\r\n          password: '',\r\n          newPassword: '',\r\n          confirmPassword: ''\r\n        },\r\n        dataRule: {\r\n          password: [\r\n            { required: true, message: '原密码不能为空', trigger: 'blur' }\r\n          ],\r\n          newPassword: [\r\n            { required: true, message: '新密码不能为空', trigger: 'blur' }\r\n          ],\r\n          confirmPassword: [\r\n            { required: true, message: '确认密码不能为空', trigger: 'blur' },\r\n            { validator: validateConfirmPassword, trigger: 'blur' }\r\n          ]\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      userName: {\r\n        get () { return this.$store.state.user.name }\r\n      },\r\n      mainTabs: {\r\n        get () { return this.$store.state.common.mainTabs },\r\n        set (val) { this.$store.commit('common/updateMainTabs', val) }\r\n      }\r\n    },\r\n    methods: {\r\n      // 初始化\r\n      init () {\r\n        this.visible = true\r\n        this.$nextTick(() => {\r\n          this.$refs['dataForm'].resetFields()\r\n        })\r\n      },\r\n      // 表单提交\r\n      dataFormSubmit () {\r\n        this.$refs['dataForm'].validate((valid) => {\r\n          if (valid) {\r\n            this.$http({\r\n              url: this.$http.adornUrl('/sys/user/password'),\r\n              method: 'post',\r\n              data: this.$http.adornData({\r\n                'password': this.dataForm.password,\r\n                'newPassword': this.dataForm.newPassword\r\n              })\r\n            }).then(({data}) => {\r\n              if (data && data.code === 0) {\r\n                this.$message({\r\n                  message: '操作成功',\r\n                  type: 'success',\r\n                  duration: 1500,\r\n                  onClose: () => {\r\n                    this.visible = false\r\n                    this.$nextTick(() => {\r\n                      this.mainTabs = []\r\n                      clearLoginInfo()\r\n                      this.$router.replace({ name: 'login' })\r\n                    })\r\n                  }\r\n                })\r\n              } else {\r\n                this.$message.error(data.msg)\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n"],"sourceRoot":"src/views/layout"}]}