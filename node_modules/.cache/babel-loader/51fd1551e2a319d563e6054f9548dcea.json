{"remainingRequest":"E:\\workspace\\code\\test\\my_project\\node_modules\\babel-loader\\lib\\index.js!E:\\workspace\\code\\test\\my_project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\workspace\\code\\test\\my_project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\workspace\\code\\test\\my_project\\src\\views\\auth\\role\\edit_role.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\workspace\\code\\test\\my_project\\src\\views\\auth\\role\\edit_role.vue","mtime":1563023635780},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.index-of\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { validPhone, validateEmail } from \"@/utils/validate\";\nimport { addRole, updRole, getRoleInfo } from \"@/api/auth/role\"; // import { getParentMenuList, getParentInterfaceList } from \"@/api/auth/resource\";\n\nimport { getParentMenuList } from \"@/api/auth/menu\"; // import { addRoleResource, selectResourceByid } from \"@/api/auth/roleResource\";\n\nimport { treeDataTranslate } from \"@/utils\";\nexport default {\n  props: [\"dialogStatus\", \"dialogFormVisible\"],\n  data: function data() {\n    return {\n      myVisible: this.dialogFormVisible,\n      buttonLoading: false,\n      disabledInput: false,\n      tempKey: \"-1\",\n      menuList: [],\n      menuListTreeProps: {\n        label: \"name\",\n        children: \"children\"\n      },\n      interListTreeProps: {\n        label: \"name\",\n        children: \"children\"\n      },\n      roleListData: [],\n      reList: [],\n      statusMap: {\n        create: \"新增\",\n        update: \"编辑\"\n      },\n      dataForm: {\n        id: 0,\n        roleId: 0,\n        code: \"\",\n        roleName: \"\",\n        remark: '12',\n        menuIdList: [],\n        interList: []\n      },\n      props: {\n        id: \"id\",\n        label: \"name\",\n        children: \"children\"\n      },\n      rules: {\n        //username: [{ required: true, message: '用户名不能为空' }],\n        remark: [{\n          required: true,\n          message: \"角色编号不能为空\"\n        }, {\n          max: 50,\n          message: \"最多输入 50 个字符\",\n          trigger: \"blur\"\n        }],\n        roleName: [{\n          required: true,\n          trigger: \"blur\",\n          message: \"角色名称不能为空\"\n        }, {\n          max: 50,\n          message: \"最多输入 50 个字符\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  watch: {\n    dialogFormVisible: function dialogFormVisible(val) {\n      // 监听父元件中传来的dialogFormVisible属性是否变化，变化则赋值给副本myVisible\n      this.myVisible = val;\n    },\n    myVisible: function myVisible(val) {\n      // 修改父元件的值\n      this.$emit(\"update:dialogFormVisible\", val);\n    }\n  },\n  created: function created() {// this.getResourceTreeList(id)\n  },\n  methods: {\n    getResourceTreeList: function getResourceTreeList(id) {\n      var _this = this;\n\n      this.dataForm.id = id;\n      this.dataForm.roleId = id;\n      getParentMenuList().then(function (response) {\n        _this.menuList = treeDataTranslate(response.data.data, \"menuId\");\n      }).then(function () {\n        _this.myVisible = true;\n\n        _this.$nextTick(function () {\n          _this.$refs[\"dataForm\"].resetFields();\n\n          _this.$refs.menuListTree.setCheckedKeys([]); // this.$refs.interListTree.setCheckedKeys([]);\n\n        });\n      }).then(function () {\n        if (!_this.dataForm.id) {\n          _this.disabledInput = false;\n          _this.buttonLoading = false; // 新增\n          // this.menuListTreeSetCurrentNode()\n        } else {\n          // 修改\n          _this.disabledInput = true;\n          getRoleInfo(_this.dataForm.id).then(function (response) {\n            if (response.data && response.data.code === \"200\") {\n              var data = response.data.data;\n              _this.dataForm.remark = data.role.remark;\n              _this.dataForm.roleName = data.role.roleName;\n              var idx = data.menuList.indexOf(_this.tempKey);\n\n              if (idx !== -1) {\n                data.role.menuIdList.splice(idx, data.menuList - idx);\n              }\n\n              _this.$refs.menuListTree.setCheckedKeys(data.menuList);\n            }\n          });\n        }\n      });\n    },\n    dataFormSubmit: function dataFormSubmit() {\n      var _this2 = this;\n\n      this.$refs[\"dataForm\"].validate(function (valid) {\n        if (valid) {\n          if (!_this2.dataForm.id) {\n            _this2.dataForm.menuIdList = [].concat(_this2.$refs.menuListTree.getCheckedKeys(), [_this2.tempKey], _this2.$refs.menuListTree.getHalfCheckedKeys());\n\n            _this2.$confirm(\"确定进行[新增]操作?\", \"提示\", {\n              type: \"warning\"\n            }).then(function () {\n              _this2.$loading.open();\n\n              addRole(_this2.dataForm).then(function (response) {\n                if (response.data.state == \"true\") {\n                  var callback = function callback() {\n                    _this2.myVisible = false;\n\n                    _this2.$emit(\"refreshDataList\");\n                  };\n\n                  _this2.$msg.showSuccess(\"新增成功\", callback);\n                } else {\n                  _this2.$msg.showError(1, response.data.msg);\n\n                  _this2.$loading.close();\n                }\n              });\n            });\n          } else {\n            _this2.dataForm.menuIdList = [].concat(_this2.$refs.menuListTree.getCheckedKeys(), [_this2.tempKey], _this2.$refs.menuListTree.getHalfCheckedKeys());\n\n            _this2.$confirm(\"确定进行[编辑]操作?\", \"提示\", {\n              type: \"warning\"\n            }).then(function () {\n              _this2.$loading.open();\n\n              updRole(_this2.dataForm).then(function (response) {\n                if (response.data.state == \"true\") {\n                  var callback = function callback() {\n                    _this2.myVisible = false;\n\n                    _this2.$emit(\"refreshDataList\");\n                  };\n\n                  _this2.$msg.showSuccess(\"编辑成功\", callback);\n                } else {\n                  _this2.$msg.showError(1, response.data.msg);\n\n                  _this2.$loading.close();\n                }\n              });\n            });\n          }\n        } else {}\n      });\n    },\n    handleCancel: function handleCancel() {\n      // 点击叉叉\n      this.myVisible = false;\n    }\n  }\n};",{"version":3,"sources":["edit_role.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-dialog width=\"60%\" :title=\"!dataForm.id ? '角色新增' : '角色编辑'\" :visible=\"myVisible\" :before-close=\"handleCancel\" :close-on-click-modal=false>\r\n    <el-form :rules=\"rules\" ref=\"dataForm\" :model=\"dataForm\" label-position=\"right\" label-width=\"100px\" style='margin:20px;'>\r\n      <el-row>\r\n        <el-col :span=\"12\">\r\n          <el-tabs type=\"border-card\">\r\n            <el-tab-pane label=\"角色基本信息\">\r\n              <div style=\"height:300px; \">\r\n                <el-form-item label=\"角色编号\" prop=\"remark\">\r\n                  <el-input placeholder=\"请填写角色编号\" v-bind:disabled=\"disabledInput\" v-model.trim=\"dataForm.remark\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"角色名称\" prop=\"roleName\">\r\n                  <el-input placeholder=\"请填写角色名称\" v-model.trim=\"dataForm.roleName\"></el-input>\r\n                </el-form-item>\r\n              </div>\r\n            </el-tab-pane>\r\n          </el-tabs>\r\n        </el-col>\r\n        <el-col :span=\"12\">\r\n          <el-tabs type=\"border-card\">\r\n            <el-tab-pane label=\"授权\">\r\n              <div style=\"height:300px; overflow-y:scroll; \">\r\n                <el-tree\r\n                :data=\"menuList\"\r\n                :props=\"menuListTreeProps\"\r\n                node-key=\"menuId\"\r\n                ref=\"menuListTree\"\r\n                :default-expand-all=\"true\"\r\n                show-checkbox>\r\n              </el-tree>\r\n              </div>\r\n            </el-tab-pane>\r\n          </el-tabs>\r\n        </el-col>\r\n        <!-- <el-col :span=\"8\">\r\n          <el-tabs type=\"border-card\">\r\n            <el-tab-pane label=\"接口\">\r\n              <div style=\"height:300px; overflow-y:scroll; \">\r\n                <el-tree :data=\"interList\" :props=\"interListTreeProps\" node-key=\"id\" ref=\"interListTree\" :default-expand-all=\"true\" show-checkbox>\r\n                </el-tree>\r\n              </div>\r\n            </el-tab-pane>\r\n          </el-tabs>\r\n        </el-col> -->\r\n      </el-row>\r\n    </el-form>\r\n    <div slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"myVisible = false\">取消</el-button>\r\n      <!-- <el-button @click=\"selectsss\">查询已有角色</el-button> -->\r\n      <el-button type=\"primary\" v-bind:loading=\"buttonLoading\" @click=\"dataFormSubmit\">保存</el-button>\r\n    </div>\r\n  </el-dialog>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { validPhone, validateEmail } from \"@/utils/validate\";\r\nimport { addRole, updRole, getRoleInfo } from \"@/api/auth/role\";\r\n// import { getParentMenuList, getParentInterfaceList } from \"@/api/auth/resource\";\r\nimport { getParentMenuList } from \"@/api/auth/menu\";\r\n// import { addRoleResource, selectResourceByid } from \"@/api/auth/roleResource\";\r\nimport { treeDataTranslate } from \"@/utils\";\r\n\r\nexport default {\r\n  props: [\"dialogStatus\", \"dialogFormVisible\"],\r\n  data() {\r\n    return {\r\n      myVisible: this.dialogFormVisible,\r\n      buttonLoading: false,\r\n      disabledInput: false,\r\n      tempKey: \"-1\",\r\n      menuList: [],\r\n      menuListTreeProps: {\r\n        label: \"name\",\r\n        children: \"children\"\r\n      },\r\n      interListTreeProps: {\r\n        label: \"name\",\r\n        children: \"children\"\r\n      },\r\n      roleListData: [],\r\n      reList: [],\r\n      statusMap: {\r\n        create: \"新增\",\r\n        update: \"编辑\"\r\n      },\r\n      dataForm: {\r\n        id: 0,\r\n        roleId:0,\r\n        code: \"\",\r\n        roleName: \"\",\r\n        remark:'12',\r\n        menuIdList: [],\r\n        interList: []\r\n      },\r\n      props: {\r\n        id: \"id\",\r\n        label: \"name\",\r\n        children: \"children\"\r\n      },\r\n      rules: {\r\n        //username: [{ required: true, message: '用户名不能为空' }],\r\n        remark: [\r\n          { required: true, message: \"角色编号不能为空\" },\r\n          { max: 50, message: \"最多输入 50 个字符\", trigger: \"blur\" }\r\n        ],\r\n        roleName: [\r\n          { required: true, trigger: \"blur\", message: \"角色名称不能为空\" },\r\n          { max: 50, message: \"最多输入 50 个字符\", trigger: \"blur\" }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  watch: {\r\n    dialogFormVisible(val) {\r\n      // 监听父元件中传来的dialogFormVisible属性是否变化，变化则赋值给副本myVisible\r\n      this.myVisible = val;\r\n    },\r\n    myVisible(val) {\r\n      // 修改父元件的值\r\n      this.$emit(\"update:dialogFormVisible\", val);\r\n    }\r\n  },\r\n  created() {\r\n    // this.getResourceTreeList(id)\r\n  },\r\n  methods: {\r\n    getResourceTreeList(id) {\r\n      this.dataForm.id = id;\r\n      this.dataForm.roleId = id;\r\n      getParentMenuList().then(response => {\r\n          this.menuList = treeDataTranslate(response.data.data, \"menuId\");\r\n      }).then(() => {\r\n        this.myVisible = true;\r\n        this.$nextTick(() => {\r\n          this.$refs[\"dataForm\"].resetFields();\r\n          this.$refs.menuListTree.setCheckedKeys([]);\r\n          // this.$refs.interListTree.setCheckedKeys([]);\r\n        });\r\n      }).then(() => {\r\n        if (!this.dataForm.id) {\r\n          this.disabledInput = false;\r\n          this.buttonLoading = false;\r\n          // 新增\r\n          // this.menuListTreeSetCurrentNode()\r\n        } else {\r\n          // 修改\r\n          this.disabledInput = true;\r\n          getRoleInfo(this.dataForm.id).then(response => {\r\n            if (response.data && response.data.code === \"200\") {\r\n              var data = response.data.data;\r\n              this.dataForm.remark = data.role.remark;\r\n              this.dataForm.roleName = data.role.roleName;\r\n              var idx = data.menuList.indexOf(this.tempKey)\r\n              if (idx !== -1) {\r\n                data.role.menuIdList.splice(idx, data.menuList - idx)\r\n              }\r\n              this.$refs.menuListTree.setCheckedKeys(data.menuList);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    dataFormSubmit() {\r\n      this.$refs[\"dataForm\"].validate(valid => {\r\n        if (valid) {\r\n          if (!this.dataForm.id) {\r\n            this.dataForm.menuIdList = [].concat(\r\n              this.$refs.menuListTree.getCheckedKeys(),[this.tempKey],\r\n              this.$refs.menuListTree.getHalfCheckedKeys()\r\n            );\r\n            this.$confirm(\"确定进行[新增]操作?\", \"提示\", {\r\n              type: \"warning\"\r\n            }).then(() => {\r\n              this.$loading.open();\r\n              addRole(this.dataForm).then(response => {\r\n                if (response.data.state == \"true\") {\r\n                  let callback = () => {\r\n                    this.myVisible = false;\r\n                    this.$emit(\"refreshDataList\");\r\n                  };\r\n                  this.$msg.showSuccess(\"新增成功\", callback);\r\n                } else {\r\n                  this.$msg.showError(1, response.data.msg);\r\n                  this.$loading.close();\r\n                }\r\n              });\r\n            });\r\n          } else {\r\n            this.dataForm.menuIdList = [].concat(\r\n              this.$refs.menuListTree.getCheckedKeys(),\r\n              [this.tempKey],\r\n              this.$refs.menuListTree.getHalfCheckedKeys()\r\n            );\r\n            this.$confirm(\"确定进行[编辑]操作?\", \"提示\", {\r\n              type: \"warning\"\r\n            }).then(() => {\r\n              this.$loading.open();\r\n              updRole(this.dataForm).then(response => {\r\n                if (response.data.state == \"true\") {\r\n                  let callback = () => {\r\n                    this.myVisible = false;\r\n                    this.$emit(\"refreshDataList\");\r\n                  };\r\n                  this.$msg.showSuccess(\"编辑成功\", callback);\r\n                } else {\r\n                  this.$msg.showError(1, response.data.msg);\r\n                 this.$loading.close();\r\n                }\r\n              });\r\n            });\r\n          }\r\n        } else {\r\n        }\r\n      });\r\n    },\r\n    handleCancel() {\r\n      // 点击叉叉\r\n      this.myVisible = false;\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/views/auth/role"}]}