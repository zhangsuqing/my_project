{"remainingRequest":"E:\\workspace\\code\\test\\my_project\\node_modules\\babel-loader\\lib\\index.js!E:\\workspace\\code\\test\\my_project\\src\\utils\\message.js","dependencies":[{"path":"E:\\workspace\\code\\test\\my_project\\src\\utils\\message.js","mtime":1562313567899},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\code\\test\\my_project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { Notification } from 'element-ui';\nimport { MessageBox } from 'element-ui';\nvar message = {\n  showWarning: function showWarning(message, callback) {\n    //message->string\n    Notification({\n      title: '警告',\n      message: message,\n      type: 'warning',\n      duration: 2000,\n      onClose: function onClose() {\n        if (typeof callback === \"function\") callback();\n      }\n    });\n  },\n  showError: function showError(type, message, callback) {\n    // type->int(1:notify 2:alert) message->string\n    switch (type) {\n      case 1:\n        Notification({\n          title: '失败',\n          message: message,\n          type: 'error',\n          duration: 2000,\n          onClose: function onClose() {\n            if (typeof callback === \"function\") callback();\n          }\n        });\n        break;\n\n      case 2:\n        MessageBox.alert(message, {\n          title: '失败',\n          type: 'error',\n          close: function close() {\n            if (typeof callback === \"function\") callback();\n          }\n        });\n        break;\n    }\n  },\n  showSuccess: function showSuccess(message, callback) {\n    Notification({\n      title: '成功',\n      message: message,\n      type: 'success',\n      duration: 2000,\n      onClose: function onClose() {\n        if (typeof callback === \"function\") callback();\n      }\n    });\n  },\n  showInfo: function showInfo(title, message, callback) {\n    MessageBox.alert(message, {\n      title: title,\n      customClass: 'my-message',\n      close: function close() {\n        if (typeof callback === \"function\") callback();\n      }\n    });\n  }\n};\nexport default message;",{"version":3,"sources":["E:\\workspace\\code\\test\\my_project\\src\\utils\\message.js"],"names":["Notification","MessageBox","message","showWarning","callback","title","type","duration","onClose","showError","alert","close","showSuccess","showInfo","customClass"],"mappings":"AAAA,SAASA,YAAT,QAA6B,YAA7B;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,WAAW,EAAE,qBAACD,OAAD,EAASE,QAAT,EAAsB;AAAC;AAClCJ,IAAAA,YAAY,CAAC;AACXK,MAAAA,KAAK,EAAE,IADI;AAEXH,MAAAA,OAAO,EAAEA,OAFE;AAGXI,MAAAA,IAAI,EAAE,SAHK;AAIXC,MAAAA,QAAQ,EAAE,IAJC;AAKXC,MAAAA,OAAO,EAAE,mBAAM;AACb,YAAI,OAAOJ,QAAP,KAAoB,UAAxB,EACEA,QAAQ;AACX;AARU,KAAD,CAAZ;AAUD,GAZa;AAadK,EAAAA,SAAS,EAAE,mBAACH,IAAD,EAAOJ,OAAP,EAAgBE,QAAhB,EAA6B;AAAE;AACxC,YAAQE,IAAR;AACE,WAAK,CAAL;AACEN,QAAAA,YAAY,CAAC;AACXK,UAAAA,KAAK,EAAE,IADI;AAEXH,UAAAA,OAAO,EAAEA,OAFE;AAGXI,UAAAA,IAAI,EAAE,OAHK;AAIXC,UAAAA,QAAQ,EAAE,IAJC;AAKXC,UAAAA,OAAO,EAAE,mBAAM;AACb,gBAAI,OAAOJ,QAAP,KAAoB,UAAxB,EACEA,QAAQ;AACX;AARU,SAAD,CAAZ;AAUA;;AACF,WAAK,CAAL;AACEH,QAAAA,UAAU,CAACS,KAAX,CAAiBR,OAAjB,EAA0B;AACxBG,UAAAA,KAAK,EAAE,IADiB;AAExBC,UAAAA,IAAI,EAAE,OAFkB;AAGxBK,UAAAA,KAAK,EAAE,iBAAM;AACX,gBAAI,OAAOP,QAAP,KAAoB,UAAxB,EACEA,QAAQ;AACX;AANuB,SAA1B;AAQA;AAtBJ;AAwBD,GAtCa;AAuCdQ,EAAAA,WAAW,EAAE,qBAACV,OAAD,EAASE,QAAT,EAAsB;AACjCJ,IAAAA,YAAY,CAAC;AACXK,MAAAA,KAAK,EAAE,IADI;AAEXH,MAAAA,OAAO,EAAEA,OAFE;AAGXI,MAAAA,IAAI,EAAE,SAHK;AAIXC,MAAAA,QAAQ,EAAE,IAJC;AAKXC,MAAAA,OAAO,EAAE,mBAAM;AACb,YAAI,OAAOJ,QAAP,KAAoB,UAAxB,EACEA,QAAQ;AACX;AARU,KAAD,CAAZ;AAUD,GAlDa;AAmDdS,EAAAA,QAAQ,EAAE,kBAACR,KAAD,EAAOH,OAAP,EAAeE,QAAf,EAA4B;AACpCH,IAAAA,UAAU,CAACS,KAAX,CAAiBR,OAAjB,EAA0B;AACxBG,MAAAA,KAAK,EAAEA,KADiB;AAExBS,MAAAA,WAAW,EAAE,YAFW;AAGxBH,MAAAA,KAAK,EAAE,iBAAM;AACX,YAAI,OAAOP,QAAP,KAAoB,UAAxB,EACEA,QAAQ;AACX;AANuB,KAA1B;AAQD;AA5Da,CAAhB;AA8DA,eAAeF,OAAf","sourcesContent":["import { Notification } from 'element-ui'\r\nimport { MessageBox } from 'element-ui'\r\n\r\nconst message = {\r\n  showWarning: (message,callback) => {//message->string\r\n    Notification({\r\n      title: '警告',\r\n      message: message,\r\n      type: 'warning',\r\n      duration: 2000,\r\n      onClose: () => {\r\n        if (typeof callback === \"function\")\r\n          callback();\r\n      }\r\n    })\r\n  },\r\n  showError: (type, message, callback) => { // type->int(1:notify 2:alert) message->string\r\n    switch (type) {\r\n      case 1:\r\n        Notification({\r\n          title: '失败',\r\n          message: message,\r\n          type: 'error',\r\n          duration: 2000,\r\n          onClose: () => {\r\n            if (typeof callback === \"function\")\r\n              callback();\r\n          }\r\n        })\r\n        break\r\n      case 2:\r\n        MessageBox.alert(message, {\r\n          title: '失败',\r\n          type: 'error',\r\n          close: () => {\r\n            if (typeof callback === \"function\")\r\n              callback();\r\n          }\r\n        })\r\n        break\r\n    }\r\n  },\r\n  showSuccess: (message,callback) => {\r\n    Notification({\r\n      title: '成功',\r\n      message: message,\r\n      type: 'success',\r\n      duration: 2000,\r\n      onClose: () => {\r\n        if (typeof callback === \"function\")\r\n          callback();\r\n      }\r\n    })\r\n  },\r\n  showInfo: (title,message,callback) => {\r\n    MessageBox.alert(message, {\r\n      title: title,\r\n      customClass: 'my-message',\r\n      close: () => {\r\n        if (typeof callback === \"function\")\r\n          callback();\r\n      }\r\n    })\r\n  },\r\n}\r\nexport default message\r\n"]}]}